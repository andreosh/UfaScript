//#Область ЗаголовокUfaScript
// Библиотека Уфа-Скрипт версия 2.2 от 04.06.2017 предназначена для OneScript 
// (c) Ошнуров Андрей Михайлович г.Уфа  UfaScript@mail.ru
//#КонецОбласти

//#Область СписокПроцедур
// Список содержимого библиотеки   UfaScript.bl --------------------------------
// -------------  переменные --------------------------------------------------------
//  Экран - массив сегментов на экране
//  АктОбъекты  - Активные объекты на экране.
//  НомАктОбъекта - Номер текущего объекта
//  Консоль - указатель на текущую консоль
//  ГлобПерем - для пользователей библиотеокой. Определяйте свои переменные ГлобПерем.Вставить("НовПерем", 0)
//  Кл - Структура с кодами клавиш для удобства  Кл.Влево, Кл.Вправо, Кл.Вверх и т.д.
//  --------------  Функции и процедуры ------------------------------------------------
//П Консоль_Вывести(Знач Т, Знач В, Знач Ш)  - Вывести текст в консоль по координатам
//П Консоль_УстановитьЦветФонаИТекста(Знач Ф, Знач Т) - Установить цвет текста и фона в консоли
//Ф СоздатьСтрокуСимволов(Знач С = " ", Знач К = 1)  - Создать строку символов
//Ф СегментОбъект(Знач Н = 0, Знач В = 0, Знач Л = 0,  Знач С = " ")  - Создать сегмент 
//Ф ПолучитьАктивныйСегментПоНомеру(Знач Ном)  - Возвращает ссылку на активный сегмент.
//П УстановитьЦветФонаИТекстаАктОбъекта(Знач Ф, Знач Т)
//П УстановитьЦветФонаИТекстаСегмента(Знач С, Знач Ф, Знач Т) и вывести на экран
//П ВывестиСегмент(Знач С) - вывести сегмент на экран
//Ф ДобавитьСегментВМассив(Знач Сегмент) в массив экрана и возвратить индекс в массиве
//П ОбновитьЭкран() - Вывести все сегменты внесенные в массив экрана
//Ф ПолучитьЦветФонаОбъекта(Знач K)  - с Экрана[K][0]   K - Индекс объекта на экране
//П УстановитьЦветФонаИТекстаВЦикле(Знач НомераСтрок, Знач Ф, Знач Т) для масcива НомераСтрок 
//Ф ДобавитьМногоСтрокВМассивСегментов(Знач МассивТекста, Знач Сегмент)  масиив строк МассивТекста на экран
//Ф ВЭкранМассивСтрокВЦвете(Знач М, Знач В, Знач Ш, Знач ЦФ, Знач ЦТ)
//П УдалитьОбъект(Знач Об) - Удалить набор объектов Об с экрана
//П НарисоватьРамкуНаВесьЭкран() - Типовая рамка с желтым фоном
//П ВывестиФайл(Знач ИмяФайла) - Вывести содержимое файла на экран 
//Ф АктОбъектыНайтиГруппу(Знач ИмяГруп) - Идекс Групппы в массиве. -1 - группа не найдена
//Ф АктОбъектыКонецГруппы() - Указательна конец списка групп
//П СоздатьАктГруппу(Знач Наим) - Создать новую группу
//Ф АктОбъекты_Добавить(Знач ИмяГруп, Знач Объект) - Добавить новый объект в группу
//Ф АктОбъекты_Позиция(Знач ИмяГруп) - Индекс начала списка группы
//Ф АктОбъекты_Количество(Знач ИмяГруп) - Количество записей в группе
//Ф АктОбъекты_УдалитьПоследнююЗапись() - Удалить последнюю запись 
//Ф АктОбъекты_ВПоследнейЗаписиОставитьNЗаписей(Знач N) - В последней группе оставить N записей
//Ф ФлагРоссии(Знач Сегмент) - Флаг Росии
//П ПоменятьЦветФонаОбъекта(Знач МассивНом, Знач Ф) - Поменять цвет фона и вывести объект (группу сегментов)
//П ПоменятьЦветТекстаОбъекта(Знач МассивНом, Знач Ф) - Поменять цвет текста и вывести объект (группу сегментов)
//П НачальныеУстановкиСистемыUfaScript() - вызывать перед своими установками в программе. 
//Ф ВопросДаНетВыходИзПрограммы() - Модальное окно с вопросом ДаНет "Выход из программы"
//Ф МодальноеОкноСВопросомДаНет(Знач M, В, Ш) - M - массив со строками окна.
//П ДобавитьПолеРедактирования(Знач Текст, Знач Высота, Знач Лево, Знач Группа) 
//Ф ГенерацияСлучайногоЧисла(Знач Макс, Знак)
//П СоздатьИЗаписатьФайл(ИмяФайла,М)
//Ф ВыполнитьКодИзМассива(М) - Создает новую функцию ФункВыполнитьКод() с содержимым из массива
//#КонецОбласти

Перем Экран экспорт;  Перем АктОбъекты; Перем НомАктОбъекта;  Перем РежимГруппы;
Перем Консоль экспорт;  Перем МассивКоординат;  Перем ГлобПерем; Перем Кл;
Перем КаталогЗапуска экспорт;
//---- Переменные для формирования index.php -----------------------------------
Перем Запись экспорт; 

//Имя: ВерсияUfascript(Вид)
//Описание: Возврат строки версии библиотеки
//Категория: Инфо 
Функция ВерсияUfascript(Вид)  экспорт
   Версия = "2.1"; ДатаВерсии="18.05.2017";
   Если      Вид=1 Тогда Возврат Версия;   ИначеЕсли Вид=2 Тогда Возврат ДатаВерсии;
   ИначеЕсли Вид=3 Тогда Возврат Версия+" от "+ДатаВерсии;   КонецЕсли;   Возврат Версия+" от "+ДатаВерсии;
КонецФункции

//Имя: Консоль_Вывести(Знач Т, Знач В, Знач Ш)
//Описание: Вывод в консольный интерфейс текста Т по координатам В и Ш
//Категория: Консоль Вывод 
Процедура Консоль_Вывести(Знач Т, Знач В, Знач Ш)   экспорт
	Консоль.КурсорВерх = В;	Консоль.КурсорЛево = Ш;	Консоль.Вывести(Т);
КонецПроцедуры

//Имя: Консоль_УстановитьЦветФонаИТекста(Знач Ф, Знач Т)
//Описание: Установит цвет фона и цвет текста в консольном интерфейсе
//Категория: Консоль Вывод 
Процедура Консоль_УстановитьЦветФонаИТекста(Знач Ф, Знач Т)  экспорт
    Консоль.ЦветФона = Ф;     Консоль.ЦветТекста = Т;
КонецПроцедуры

//Имя: СоздатьСтрокуСимволов(Знач С = " ", К)
//Описание: Создать Строку Символов С длинной K
//Категория: Строка 
Функция СоздатьСтрокуСимволов(Знач С = " ", К)  экспорт
     Стр = "";    Для сч1 = 1 По К Цикл   Стр = Стр+С;   КонецЦикла; 	    Возврат Стр;	  
КонецФункции

//Имя: ОбновитьЭкран()
//Описание: Вывод всех зарегистрированных на экране сегментов 
//Категория: Консоль Вывод Устарело 
Процедура ОбновитьЭкран()  экспорт
   	Для Сч = 0 По Экран.Количество() - 1 Цикл    ВывестиСегмент(Экран[Сч]); 	КонецЦикла;
КонецПроцедуры

//Имя: СегментОбъект(Знач Н = 0, Знач В = 0, Знач Л = 0,  Знач С = " ")
//Описание: Создание сегмента для вывода на экран консоли 
//Категория: Консоль Вывод Устарело 
Функция СегментОбъект(Знач Н = 0, Знач В = 0, Знач Л = 0,  Знач С = " ")  экспорт
	О = Новый Структура();
	О.Вставить("Направление", Н);	О.Вставить("Лево", Л);	О.Вставить("Верх", В);
	О.Вставить("Символ", С); 	О.Вставить("ЦветФона", 0);	О.Вставить("ЦветТекста", 0);
	О.Вставить("Длина", СтрДлина(О.Символ)); 
	Возврат О;
КонецФункции

//Имя: ПолучитьАктивныйСегментПоНомеру(Знач Ном)
//Описание: Получить ссылку на Активный Сегмент По указанному Номеру 
//Категория: Консоль Вывод Устарело 
Функция ПолучитьАктивныйСегментПоНомеру(Знач Ном)   экспорт
   Возврат Экран[АктОбъекты[Ном]];
КонецФункции

//Имя: УстановитьЦветФонаИТекстаАктОбъекта(Знач Ф, Знач Т)
//Описание: Установить Цвет Фона Ф и цвет Текста Т Активного Объекта 
//Категория: Консоль Вывод Устарело 
Процедура УстановитьЦветФонаИТекстаАктОбъекта(Знач Ф, Знач Т)   экспорт
    УстановитьЦветФонаИТекстаСегмента(Экран[АктОбъекты[НомАктОбъекта]], Ф, Т)
КонецПроцедуры

//Имя: УстановитьЦветФонаИТекстаСегмента(Знач С, Знач Ф, Знач Т)
//Описание: Установить Цвет Фона Ф, цвет Текста Т Сегмента и вывести сегмент на экран  
//Категория: Консоль Вывод Устарело 
Процедура УстановитьЦветФонаИТекстаСегмента(Знач С, Знач Ф, Знач Т)   экспорт
    С.ЦветФона = Ф;     С.ЦветТекста = Т;
	ВывестиСегмент(С);
КонецПроцедуры

//Имя: Отладка(Y,X,С)
//Описание: Вывести текст С в консоль по координатам X и Y   
//Категория: Консоль Вывод Устарело 
Процедура Отладка(Y,X,С)   экспорт
	Консоль.КурсорВерх = Y;	Консоль.КурсорЛево = X;   Консоль.Вывести(С); 
КонецПроцедуры

//Имя: ВывестиСегмент(Знач С)
//Описание: Вывести сегмент С на экран   
//Категория: Консоль Вывод Устарело 
Процедура ВывестиСегмент(Знач С)   экспорт
	Консоль.КурсорВерх = С.Верх;	Консоль.КурсорЛево = С.Лево;
    Если С.ЦветФона <> 0 Тогда	ЦФ = Консоль.ЦветФона;	Консоль.ЦветФона = С.ЦветФона;	КонецЕсли;
    Если С.ЦветТекста <> 0 Тогда  ЦТ = Консоль.ЦветТекста;   Консоль.ЦветТекста = С.ЦветТекста;	КонецЕсли;
    Если С.Направление > -1 Тогда Консоль.Вывести(С.Символ); КонецЕсли;
    Если С.ЦветФона <> 0 Тогда	   Консоль.ЦветФона = ЦФ;	КонецЕсли;
    Если С.ЦветТекста <> 0 Тогда   Консоль.ЦветТекста = ЦТ;	КонецЕсли;
КонецПроцедуры

//Имя: ДобавитьСегментВМассив(Знач Сегмент)
//Описание: Добавить Сегмент В Массив Экрана (регистрация сегмента на экране)  
//Категория: Консоль Вывод Устарело 
Функция ДобавитьСегментВМассив(Знач Сегмент)  
    Для Сч = 1 По Экран.Количество() - 1 Цикл
	  Если Экран[Сч].Направление < 0 Тогда  Экран[Сч] = Сегмент; Возврат Сч;   КонецЕсли;		 
    КонецЦикла;    ВывестиСегмент(Сегмент);
    Экран.Добавить(Сегмент);     Возврат Сч; 	  // Номер добавленной строки в экране
КонецФункции

//Имя: ПолучитьЦветФонаОбъекта(Знач K)
//Описание: Получить Цвет Фона Объекта по порядковому номеру регистрации на экране  
//Категория: Консоль Вывод Устарело 
Функция ПолучитьЦветФонаОбъекта(Знач K)
   Возврат Экран[ГлобПерем.Координаты[K][0]].ЦветФона;
КонецФункции

//Имя: УстановитьЦветФонаИТекстаВЦикле(Знач НомераСтрок, Знач Ф, Знач Т)
//Описание: Установить цвет фона и цвет текста в цикле для группы сегментов с номерами перечисленными в массиве НомераСтрок
//Категория: Консоль Вывод Устарело 
Процедура УстановитьЦветФонаИТекстаВЦикле(Знач НомераСтрок, Знач Ф, Знач Т)
   Для сч = 0 По НомераСтрок.Количество()-1 Цикл Экран[НомераСтрок[сч]].ЦветФона = Ф; 
   Экран[НомераСтрок[сч]].ЦветТекста = Т; ВывестиСегмент(Экран[НомераСтрок[сч]]); КонецЦикла;	  
КонецПроцедуры

//Имя: ДобавитьМногоСтрокВМассивСегментов(Знач МассивТекста, Знач Сегмент)
//Описание: Создать группу сегментов из массива МассивТекста, Начальные координаты заданы в Сегмент 
//Категория: Консоль Вывод Устарело 
Функция ДобавитьМногоСтрокВМассивСегментов(Знач МассивТекста, Знач Сегмент);
    Н = Новый Массив;   
	Для Сч = 0 По МассивТекста.Количество() - 1 Цикл
	   Об = СегментОбъект(Сегмент.Направление, Сегмент.Верх+Сч, Сегмент.Лево, МассивТекста[Сч]); 
	   Н.Добавить(ДобавитьСегментВМассив(Об));
    КонецЦикла;    
    Возврат	Н;   // Массив номеров строк в экране
КонецФункции

//Имя: ВЭкранМассивСтрокВЦвете(Знач М, Знач В, Знач Ш, Знач ЦФ, Знач ЦТ)
//Описание: Вывести на экран сегменты сформированные из массива М по координате В Ш в цвете ЦФ ЦТ 
//Категория: Консоль Вывод Устарело 
Функция ВЭкранМассивСтрокВЦвете(Знач М, Знач В, Знач Ш, Знач ЦФ, Знач ЦТ) экспорт
     С = СегментОбъект(0, В, Ш, " ");	
	 Н = ДобавитьМногоСтрокВМассивСегментов(М, С);
	УстановитьЦветФонаИТекстаВЦикле(Н, ЦФ, ЦТ);   
 Возврат Н; // Массив номеров строк
КонецФункции

//Имя: УдалитьОбъект(Знач Об)
//Описание: Скрыть объект с экрана, пометив его на удаление (Направление = -1)
//Категория: Консоль Вывод Устарело 
Процедура УдалитьОбъект(Знач Об)
   Для сч=0 По Об.Количество()-1 Цикл
      Экран[Об[сч]].Направление = -1;
   КонецЦикла;
КонецПроцедуры

//Имя: ПоменятьЦветФонаОбъекта(Знач МассивНом, Знач Ф)
//Описание: Поменять цвет фона списка сегментов, номера которых указаны в массиве МассивНом 
//Категория: Консоль Вывод Устарело 
Процедура ПоменятьЦветФонаОбъекта(Знач МассивНом, Знач Ф)
   Для сч = 0 По МассивНом.Количество()-1 Цикл
      Экран[МассивНом[сч]].ЦветФона = Ф;	   ВывестиСегмент(Экран[МассивНом[сч]]);
   КонецЦикла;
КонецПроцедуры

//Имя: ПоменятьЦветТекстаОбъекта(Знач МассивНом, Знач Ф)
//Описание: Поменять цвет текста списка сегментов, номера которых указаны в массиве МассивНом 
//Категория: Консоль Вывод Устарело 
Процедура ПоменятьЦветТекстаОбъекта(Знач МассивНом, Знач Ф)  экспорт
   Для сч = 0 По МассивНом.Количество()-1 Цикл
       Экран[МассивНом[сч]].ЦветТекста = Ф;	   ВывестиСегмент(Экран[МассивНом[сч]]);
   КонецЦикла;
КонецПроцедуры

//Имя: НарисоватьРамкуНаВесьЭкран()
//Описание: Задать желтый фон экрана консоли и нарисовать рамку из звездочек 
//Категория: Консоль Вывод Устарело 
Процедура НарисоватьРамкуНаВесьЭкран() экспорт
    С = СоздатьСтрокуСимволов("*",Консоль.Ширина);    С2 = "*"+СоздатьСтрокуСимволов(" ",Консоль.Ширина-2)+"*";
	М = Новый Массив;    М.Добавить(С);
   	Для Сч = 1 По Консоль.Высота - 4 Цикл      М.Добавить(С2);	КонецЦикла;
    М.Добавить(С);    
    Т = ВЭкранМассивСтрокВЦвете(М, 0, 0, ЦветКонсоли.Желтый, ЦветКонсоли.Красный);
КонецПроцедуры

//Имя: ФлагРоссии(Знач Сегмент)
//Описание: Нарисовать флаг России 
//Категория: Консоль Вывод Устарело 
Функция ФлагРоссии(Знач Сегмент)  экспорт
    C = СегментОбъект(0,3,3,"        "); C.ЦветФона = ЦветКонсоли.Белый; ДобавитьСегментВМассив(C);
    C = СегментОбъект(0,4,3," РОССИЯ "); C.ЦветФона = ЦветКонсоли.Синий; C.ЦветТекста = ЦветКонсоли.Красный;  ДобавитьСегментВМассив(C);
    C = СегментОбъект(0,5,3,"        "); C.ЦветФона = ЦветКонсоли.Красный;  ДобавитьСегментВМассив(C);
КонецФункции

//Имя: ВопросДаНетВыходИзПрограммы()
//Описание: Высветить в консоль модальное окно ДаНет для выхода из программы  
//Категория: Консоль Вывод Устарело 
Функция ВопросДаНетВыходИзПрограммы()  экспорт
   M = Новый Массив;    В = Консоль.Высота/2-10;  Ш = Консоль.Ширина/2-20;
                      M.Добавить("+------------------------------+");
                      M.Добавить("|Вы хотите выйти из программы ?|");
   Для сч=0 По 2 Цикл M.Добавить("|                              |"); КонецЦикла;
                      M.Добавить("+------------------------------+");
    Если МодальноеОкноСВопросомДаНет(M, В, Ш) Тогда Возврат Истина; КонецЕсли;
	Возврат Ложь;
КонецФункции

Функция МодальноеОкноСВопросомДаНет(Знач M, В, Ш)  экспорт
   K = M.Количество();
   Текст = ВЭкранМассивСтрокВЦвете(M, В, Ш, ЦветКонсоли.Зеленый, ЦветКонсоли.Синий);
   СДа = СегментОбъект(0, В+K-2, Ш+5, "<Да>");    
   УстановитьЦветФонаИТекстаСегмента(СДа,  ЦветКонсоли.Желтый, ЦветКонсоли.Синий);
   СНет = СегментОбъект(0, В+K-2, Ш+15, "<Нет>");    
   УстановитьЦветФонаИТекстаСегмента(СНет,  ЦветКонсоли.Серый, ЦветКонсоли.Синий);
	Клавиша = Консоль.Прочитать();   Рез = 0;
	Пока Клавиша <> Кл.Ввод Цикл 
	   Если      Клавиша = Кл.Влево Тогда 
	      УстановитьЦветФонаИТекстаСегмента(СНет, ЦветКонсоли.Серый,  ЦветКонсоли.Синий);
	      УстановитьЦветФонаИТекстаСегмента(СДа,  ЦветКонсоли.Желтый, ЦветКонсоли.Синий);
		  Рез = 0;
       ИначеЕсли Клавиша = Кл.Вправо Тогда
	      УстановитьЦветФонаИТекстаСегмента(СНет, ЦветКонсоли.Желтый, ЦветКонсоли.Синий);
	      УстановитьЦветФонаИТекстаСегмента(СДа,  ЦветКонсоли.Серый,  ЦветКонсоли.Синий);
		  Рез = 1;
	   КонецЕсли;
	  Клавиша = Консоль.Прочитать();	
    КонецЦикла;
    Если Рез=1 Тогда УдалитьОбъект(Текст);  ОбновитьЭкран(); Возврат Истина; КонецЕсли;
    ОбновитьЭкран();    Возврат Ложь;
КонецФункции

//Имя: ДобавитьПолеРедактирования(Знач Текст, Знач Высота, Знач Лево, Знач Группа)
//Описание: Высветить поле редактирования в консоле  
//Категория: Консоль Вывод Устарело 
Процедура ДобавитьПолеРедактирования(Знач Текст, Знач Высота, Знач Лево, Знач Группа)  экспорт
   С = СегментОбъект(0, Высота, Лево, Текст);    
   УстановитьЦветФонаИТекстаСегмента(С,  ЦветКонсоли.Белый, ЦветКонсоли.Серый);
   АктОбъекты_Добавить(Группа,ДобавитьСегментВМассив(С));
КонецПроцедуры

//Имя: АктОбъекты
//Описание: Набор процедур для работы с активными (реагирующими на нажатия) сегментами (использовалось до создания ООП в OneScript)  
//Категория: Консоль Вывод Устарело 
Функция АктОбъектыНайтиГруппу(Знач ИмяГруп)
   Для сч = 0 По 27 Цикл
       Если АктОбъекты[сч] = ИмяГруп  Тогда
	      Возврат сч;
       КонецЕсли;   
   КонецЦикла;
   Возврат -1;
КонецФункции

Функция АктОбъектыКонецГруппы()
   Для сч = 3 По 27 Цикл
       Если АктОбъекты[сч] = "КонецСпискаГрупп"  Тогда
	      Возврат сч;
       КонецЕсли;   
   КонецЦикла;
   Возврат 0;
КонецФункции

Процедура СоздатьАктГруппу(Знач Наим)
   Если АктОбъекты.Количество() < 1 Тогда
        АктОбъекты.Добавить(Наим);
		Для сч = 1 По 30 Цикл  АктОбъекты.Добавить(0);  КонецЦикла;
		АктОбъекты[1] = 0;        // Количество в группе
	    АктОбъекты[2] = 31;      // Начальная позиция группы
		АктОбъекты[3] = "КонецСпискаГрупп";
   ИначеЕсли АктОбъекты.Количество() > 0 Тогда
      K = АктОбъектыКонецГруппы();
      Если K > 2  Тогда
        АктОбъекты[K] = Наим;
	    АктОбъекты[K+1] = 0;
	    АктОбъекты[K+2] = АктОбъекты[K-2]+АктОбъекты[K-1];
	    АктОбъекты[K+3] = "КонецСпискаГрупп";
      КонецЕсли;
    КонецЕсли;	 
КонецПроцедуры


Функция АктОбъекты_Добавить(Знач ИмяГруп, Знач Объект)
   K = АктОбъектыНайтиГруппу(ИмяГруп);
   Если K<0 Тогда
      Сообщить("Группа <"+ИмяГруп+"> при добавлении в АктОбъекты не найдена");
	  Клавиша = Консоль.Прочитать();
	  Возврат 0;
   КонецЕсли;
   Если АктОбъекты[K+3] = "КонецСпискаГрупп" Тогда
      АктОбъекты.Добавить(Объект);
      АктОбъекты[K+1] = АктОбъекты[K+1]+1;
	  Возврат АктОбъекты.Количество()-1;
   КонецЕсли;   
   Сообщить("Группа "+ИмяГруп+" является не последней. Добавлять объекты нельзя.");
   Возврат 0;
КонецФункции

Функция АктОбъекты_Позиция(Знач ИмяГруп)
   K = АктОбъектыНайтиГруппу(ИмяГруп);
   Если K<0 Тогда
      Сообщить("Группа <"+ИмяГруп+"> при считывании Позиции в АктОбъекты не найдена");
	  Клавиша = Консоль.Прочитать();	  Возврат -1;
   КонецЕсли;
   Возврат АктОбъекты[K+2];
КонецФункции

Функция АктОбъекты_Количество(Знач ИмяГруп)
   K = АктОбъектыНайтиГруппу(ИмяГруп);
   Если K<0 Тогда
      Сообщить("Группа <"+ИмяГруп+"> при считывании Количество в АктОбъекты не найдена");
	  Клавиша = Консоль.Прочитать();	  Возврат -1;
   КонецЕсли;
   Возврат АктОбъекты[K+1];
КонецФункции

Функция АктОбъекты_УдалитьПоследнююЗапись()
   Если АктОбъекты.Количество() < 1 Тогда      Возврат 0;   КонецЕсли;
   K = АктОбъектыКонецГруппы();
   Если АктОбъекты[K-2]>0 Тогда
      АктОбъекты.Удалить(АктОбъекты.Количество()-1);
      АктОбъекты[K-2] = АктОбъекты[K-2]-1;   Возврат АктОбъекты[K-2];
   КонецЕсли;
КонецФункции

Функция АктОбъекты_ВПоследнейЗаписиОставитьNЗаписей(Знач N)
   Если АктОбъекты.Количество() < 1 Тогда      Возврат 0;   КонецЕсли;
   K = АктОбъектыКонецГруппы();
   Пока АктОбъекты[K-2]>N Цикл
      АктОбъекты_УдалитьПоследнююЗапись();
   КонецЦикла;
КонецФункции

Функция ПроверкаКнопокНаКрайние(Знач Груп, Знач Напр)   экспорт
   П = АктОбъекты_Позиция(Груп);
   Если НомАктОбъекта = П+АктОбъекты_Количество(Груп)-1 И Напр = 1 Тогда Напр = 0;  КонецЕсли;
   Если НомАктОбъекта = П И Напр = -1 Тогда Напр = 0;  КонецЕсли;  Возврат Напр;
КонецФункции

Процедура ДляОтладки_ПрисвоитьСимволВОбъект(Объект,Сим)    экспорт
   Экран[Объект[0]].Символ = Сим;     ВывестиСегмент(Экран[Объект[0]]); 
КонецПроцедуры


//#КонецОбласти

Процедура БазовыеУстановкиСистемыUfaScript() экспорт
   КаталогЗапуска = ТекущийКаталог();
КонецПроцедуры

//Имя: НачальныеУстановкиСистемыUfaScript(Знач В, Знач Ш)
//Описание: Инициализация библиотеки UfaScript. Задание минимального размера консоли В-высота Ш-ширина
//Категория: Консоль Вывод
Процедура НачальныеУстановкиСистемыUfaScript(Знач В, Знач Ш) экспорт
   Экран = Новый Массив;      НомАктОбъекта = 0;   АктОбъекты = Новый Массив;   Консоль = Новый Консоль();
   Консоль.ВидимостьКурсора(Ложь);   ГлобПерем = Новый Структура();  БазовыеУстановкиСистемыUfaScript();
   Если Консоль.Ширина < Ш Тогда
       Сообщить("Данная программа не может правильно отображать данные при ширине консоли < "+Ш+
	       ". Текущая ширина консоли "+Консоль.Ширина+" Текущая высота консоли "+Консоль.Высота);
      Консоль.Прочитать();  ЗавершитьРаботу(1);
   КонецЕсли;
   Если Консоль.Высота < В Тогда
       Сообщить("Данная программа не может правильно отображать данные работать при высоте консоли < "+В+
	     ". Текущая высота консоли "+Консоль.Высота+" Текущая ширина консоли "+Консоль.Ширина);
	  Консоль.Прочитать();	    ЗавершитьРаботу(1);
   КонецЕсли;
   Кл = Новый Структура(); Кл.Вставить("Влево",37); Кл.Вставить("Вправо",39); Кл.Вставить("Вниз",40);
   Кл.Вставить("Вверх",38); Кл.Вставить("Ввод",13);  Кл.Вставить("Таб",9);
   Кл.Вставить("Q",81);  Кл.Вставить("A",65);  Кл.Вставить("Z",90); Кл.Вставить("W",87); Кл.Вставить("S",83);
   Кл.Вставить("X",88);  Кл.Вставить("E",69);  Кл.Вставить("R",82); Кл.Вставить("T",84); Кл.Вставить("D",68);
   Кл.Вставить("F",70);  Кл.Вставить("G",71);  Кл.Вставить("Y",89); Кл.Вставить("U",85); Кл.Вставить("I",73);
   Кл.Вставить("H",72);  Кл.Вставить("J",74);  Кл.Вставить("K",75); Кл.Вставить("ESC",27); 
КонецПроцедуры

//Имя: ГенерацияСлучайногоЧисла(Знач Макс, Знак)
//Описание: Генерация случайного числа. Взято из примера игры "Змейка"
//Категория: ГСЧ
Функция ГенерацияСлучайногоЧисла(Знач Макс, Знак)  экспорт
	Медиана = Цел(Макс/2);	Секунда = Секунда(ТекущаяДата());
	Результат = Медиана + (Секунда * Знак);
	Если Результат < 0 Тогда	Результат = Результат * -1; 	КонецЕсли;
	Если Результат > Макс Тогда		Результат = Результат - Макс;	КонецЕсли;
	Знак = -Знак;	Возврат Результат;
КонецФункции

//Имя: СоздатьСтруктуруСПеременнымиСреды()
//Описание: Считывает переменные системного окружения в структуру 
//Категория: Системная
Функция СоздатьСтруктуруСПеременнымиСреды()
   С = Новый Структура();   СИ = Новый СистемнаяИнформация();
   Для Каждого Переменная Из СИ.ПеременныеСреды() Цикл
      С.Вставить(Переменная.Ключ, Переменная.Значение);
   КонецЦикла;   Возврат С;
КонецФункции

//Имя: СоздатьМассивСПеременнымиСреды()
//Описание: Создает текстовый массив с переменными системного окружения 
//Категория: Системная
Функция СоздатьМассивСПеременнымиСреды()  экспорт
   М = Новый Массив;   СИ = Новый СистемнаяИнформация();
   Для Каждого Переменная Из СИ.ПеременныеСреды() Цикл
      М.Добавить(Переменная.Ключ+" ="+Переменная.Значение);
   КонецЦикла;      Возврат М;
КонецФункции

//#Область ТекстовыйФайл

//Имя: ВывестиФайл(Знач ИмяФайла)
//Описание: Выводит на экран содержимое текстового файла. 
//Категория: Файл Текст
Процедура ВывестиФайл(Знач ИмяФайла)   экспорт
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда
		Чтение = Новый ЧтениеТекста(Файл.ПолноеИмя);
		Сообщение = Чтение.Прочитать();		Сообщить(Сообщение);		Чтение.Закрыть();
	КонецЕсли;
КонецПроцедуры

//Имя: ФайлСуществует(Знач ИмяФайла)
//Описание: Проверяет существует ли файл. 
//Категория: Файл 
Функция ФайлСуществует(Знач ИмяФайла)  экспорт
	Файл = Новый Файл(ИмяФайла);
	Если Файл.Существует() Тогда Возврат Истина; КонецЕсли;
    Возврат Ложь;
КонецФункции

//Имя: СоздатьИЗаписатьФайл(ИмяФайла,Знач М = Неопределено)
//Описание: Создать файл и записать в него строки из массива. 
//Категория: Файл Текст
Процедура СоздатьИЗаписатьФайл(ИмяФайла,Знач М = Неопределено)   экспорт
  Ф = Новый ЗаписьТекста;  Ф.Открыть(ИмяФайла);
  Если НЕ М = Неопределено Тогда
     Для сч=0 По М.Количество()-1 Цикл   Ф.ЗаписатьСтроку(М[сч]+" "); КонецЦикла;  
  КонецЕсли;    Ф.Закрыть();  
КонецПроцедуры

//Имя: ЗаменитьТабНаПробелы(М)
//Описание: Заменить в массиве символы табуляции на 4 пробела. 
//Категория: Файл Текст
Функция ЗаменитьТабНаПробелы(М)
  Для сч=0 По М.Количество()-1 Цикл М[сч]=СтрЗаменить(М[сч],Символ(9),"        "); КонецЦикла;
  Длина=ОпределитьМаксДлинуСтрокиВМассиве(М);
  Для сч=0 По М.Количество()-1 Цикл Д=Длина-СтрДлина(М[сч]);  Если Д>0 Тогда
    	М[сч]=М[сч]+СоздатьСтрокуСимволов(" ",Д);  КонецЕсли;  КонецЦикла;  Возврат М;  
КонецФункции

//Имя: ОпределитьМаксДлинуСтрокиВМассиве(М)
//Описание: Определить максимальную длину в массиве строк. 
//Категория: Текст
Функция ОпределитьМаксДлинуСтрокиВМассиве(М) экспорт
   Длина = 0;   Для сч=0 По М.Количество()-1 Цикл  Д=СтрДлина(СтрЗаменить(М[сч],Символ(9),"        ")); 
   Если Д>Длина Тогда   Длина=Д;  КонецЕсли;  КонецЦикла;  Возврат Длина;
КонецФункции

//Имя: ЗагрузитьСтрокиИзФайлаВМассив(Имя)
//Описание: Загрузить Строки Из Файла В Массив. 
//Категория: Файл Текст 
Функция ЗагрузитьСтрокиИзФайлаВМассив(Имя)  экспорт
  М = Новый Массив;  Чтение = Новый ЧтениеТекста(Имя,КодировкаТекста.UTF8);
  Стр=Чтение.ПрочитатьСтроку();  Пока Стр <> Неопределено  Цикл   
     М.Добавить(Стр);  Стр=Чтение.ПрочитатьСтроку(); КонецЦикла; 		Возврат М;  
КонецФункции

//Имя: ЗаписатьТекстВФайл(ИмяФайла,Текст1)
//Описание: Записать Текст В Файл. 
//Категория: Файл Текст 
Функция ЗаписатьТекстВФайл(ИмяФайла,Текст1) Экспорт
   Текст=Новый ЗаписьТекста(ИмяФайла);   Текст.Записать(Текст1);   Текст.Закрыть();
КонецФункции

//Имя: ЧитатьТекстИзФайла(ИмяФайла)
//Описание: Считать содержимое файла в текстовое поле. 
//Категория: Файл Текст 
Функция ЧитатьТекстИзФайла(ИмяФайла)  экспорт
   Чтение=Новый ЧтениеТекста(ИмяФайла); 
   Если НЕ Чтение.Существует() Тогда ВызватьИсключение "Файл не найден. Имя файла "+ИмяФайла; КонецЕсли;    
   Текст1 = Чтение.Прочитать();   Чтение.Закрыть();  Возврат Текст1;
КонецФункции

//#КонецОбласти


//#Область ООП

//Имя: ВызватьФункцию(Функ,Где)
//Описание: Вызвать внешнюю функцию с именем Функ, которая находится в модуле Где. 
//Категория: Функция OneScript
Функция ВызватьФункцию(Функ,Где) экспорт
 	 М = Новый Массив;    М.Добавить("Возврат ТотОбъект."+Функ+";");  	 Возврат ВыполнитьКодИзМассива(М,Где);
КонецФункции

//Имя: ВыполнитьКодИзМассива(М,Где)
//Описание: Выполнить записанный в строковом массиве код OneScript. 
//Категория: OneScript
Функция ВыполнитьКодИзМассива(М,Где)   экспорт
   М1 = Новый Массив;   
   М1.Добавить("Перем ТотОбъект;");
   М1.Добавить("Функция Результат() экспорт ");
   Для сч=0 По М.Количество()-1 Цикл      М1.Добавить(М[сч]);   КонецЦикла;
   М1.Добавить("КонецФункции");
   М1.Добавить("Функция ТомуОбъекту(Тот) экспорт ТотОбъект=Тот; КонецФункции");
   СоздатьИЗаписатьФайл(КаталогЗапуска+"\Выполнение.osm",М1);
   С = ЗагрузитьСценарий(КаталогЗапуска+"\Выполнение.osm");   С.ТомуОбъекту(Где);
   Возврат С; 
КонецФункции

//Имя: СоздатьООПОбъект(ИмяОбъекта,М)
//Описание: Создать объект из массив-образа объекта. 
//Категория: ООП
Функция СоздатьООПОбъект(ИмяОбъекта,М)   экспорт
   КонструкторЕсть = Ложь;  ДеструкторЕсть = Ложь;  БиблиотекаЕсть = Ложь;  М1=Новый Массив;   
   Если ИмяОбъекта="" Тогда А = КаталогЗапуска+"\object.osm" ИначеЕсли  СтрДлина(ИмяОбъекта)>0 Тогда 
         А = КаталогЗапуска+"\"+ИмяОбъекта+".osm"; КонецЕсли;   
   Если НЕ СтрНайти(М[0],"Перем ИмяОбъекта экспорт; Перем Родитель  Экспорт") Тогда  
       М1.Добавить("Перем ИмяОбъекта экспорт; Перем Родитель  Экспорт; Перем UfaScript экспорт; Перем НашОбъект экспорт;"+
	         " Перем ГлМодуль;"); 
   КонецЕсли;
   Для сч=0 По М.Количество()-1 Цикл
      Если СтрНачинаетсяС(М[сч],"Функция Конструктор(")     Тогда   КонструкторЕсть = Истина;
      ИначеЕсли СтрНачинаетсяС(М[сч],"Функция Деструктор(") Тогда	ДеструкторЕсть = Истина;  КонецЕсли; 	  
      Если СокрЛП(М[сч])<>""  Тогда     М1.Добавить(М[сч]);      КонецЕсли;	  
   КонецЦикла;
	М1 = ПереместитьПеременВперед(М1);		 
   СоздатьИЗаписатьФайл(А,М1);  
   С=ЗагрузитьСценарий(А);     С.ИмяОбъекта = ИмяОбъекта;     С.НашОбъект = С;  С.UfaScript = ЭтотОбъект;
   Если КонструкторЕсть  Тогда С.Конструктор(); КонецЕсли;   Возврат С;
КонецФункции

//Имя: СоздатьНаследникаООПОбъекта(Об,Об2,М)
//Описание: Создать наследника Об2 из созданного объекта Об. 
//Категория: ООП
Функция СоздатьНаследникаООПОбъекта(Об,Об2,М)    экспорт
    Имя = КаталогЗапуска+"\"+Об+".osm";
	Файл = Новый Файл(Имя);
	Если Файл.Существует() Тогда
	    М1 = ЗагрузитьСтрокиИзФайлаВМассив(Имя);  
        M2 = СобратьУправляющиеКоманды(М);
		М = ОчиститьУправляющиеКоманды(М);
        М1 = ОбработкаУправляющихКоманд(М1,M2);
		М2 = Новый Массив;		М2.Добавить(М1[0]);  
		Для сч=1 По М1.Количество()-1 Цикл  //---------- сначала все переменные   
		   Если СтрНайти(М1[сч],"Перем ") Тогда  М2.Добавить(М1[сч]);  КонецЕсли;
        КонецЦикла;
		Для сч=0 По М.Количество()-1 Цикл
		   Если СтрНайти(М[сч],"Перем ") Тогда  М2.Добавить(М[сч]);  КонецЕсли;
        КонецЦикла;
		Для сч=1 По М1.Количество()-1 Цикл     //----- потом функции кроме переменных
		    стр = СокрЛП(М1[сч]);
           Если стр<>"" И НЕ СтрНайти(М1[сч],"Перем ") Тогда М2.Добавить(стр); КонецЕсли;
        КонецЦикла;
		Для сч=1 По М.Количество()-1 Цикл
		    стр = СокрЛП(М[сч]);
           Если стр<>"" И НЕ СтрНайти(М[сч],"Перем ") Тогда М2.Добавить(стр); КонецЕсли; 
        КонецЦикла;
		Объект = СоздатьООПОбъект(Об2,М2);		Объект.Родитель = Об;
		Возврат Объект;
	КонецЕсли;
       Сообщить(" Родитель "+Имя+" отсутствует ");
       Возврат -1; 	   
КонецФункции

//Имя: СобратьУправляющиеКоманды(М)
//Описание: Создать массив с управляющими командами из массив-образа объекта. 
//Категория: ООП
Функция СобратьУправляющиеКоманды(М)
	 М2 = Новый Массив;
    Для сч=0 По М.Количество()-1 Цикл Если СтрНачинаетсяС(М[сч],"#") Тогда М2.Добавить(М[сч]); КонецЕсли;
	КонецЦикла;  	Возврат М2;
КонецФункции

//Имя: ОчиститьУправляющиеКоманды(М)
//Описание: Убрать управляющие команды из массив-образа объекта. 
//Категория: ООП
Функция ОчиститьУправляющиеКоманды(М)
    Для сч=0 По М.Количество()-1 Цикл   Если СтрНачинаетсяС(М[сч],"#") Тогда М[сч] = " "; КонецЕсли;	КонецЦикла;
    Возврат М;
КонецФункции
		
//Имя: ОбработкаУправляющихКоманд(М,М2)
//Описание: Обработать массив М управляющими командами из массива М2. 
//Категория: ООП
Функция ОбработкаУправляющихКоманд(М,М2)
        Для сч=0 По М2.Количество()-1 Цикл
		   Если СтрНачинаетсяС(М2[сч],"#Переименовать") Тогда
		      сч1 = СтрНайти(М2[сч]," "); СтароеИмя = СокрЛП(Сред(М2[сч],сч1));
			  сч1 = СтрНайти(СтароеИмя," ");  НовоеИмя = СокрЛП(Сред(СтароеИмя,сч1));  СтароеИмя = СокрЛП(Лев(СтароеИмя,сч1));
			  Для сч2=0 По М.Количество()-1 Цикл 
			     Если СтрНайти(М[сч2],"Функция "+СтароеИмя+"(") Тогда   
				      М[сч2] = СтрЗаменить(М[сч2],СтароеИмя+"(",НовоеИмя+"("); М2[сч] = " "; Прервать; КонецЕсли;
			  КонецЦикла	 
		   ИначеЕсли СтрНачинаетсяС(М2[сч],"#Удалить") Тогда
		      сч1 = СтрНайти(М2[сч]," "); ИмяФункц = СокрЛП(Сред(М2[сч],сч1)); 
              Для сч2=0 По М.Количество()-1 Цикл 
                 Если СтрНайти(М[сч2],"Функция "+ИмяФункц+"(") Тогда  М[сч2] = " "; М2[сч] = " "; Прервать; КонецЕсли;
			  КонецЦикла	 
		   КонецЕсли;
		КонецЦикла;
   Возврат М
КонецФункции

//Имя: СоздатьООПОбъектИзМассива(Об,М)
//Описание: Создать объект из массив-образа объекта 
//Категория: ООП
Функция СоздатьООПОбъектИзМассива(Об,М)    экспорт
    М2 = СобратьУправляющиеКоманды(М);	    М = ОчиститьУправляющиеКоманды(М);
    М = ОбработкаУправляющихКоманд(М,М2);	М2 = ПереместитьПеременВперед(М);		 
	Объект = СоздатьООПОбъект(Об,М2);		Возврат Объект;
КонецФункции

//Имя: ПереместитьПеременВперед(М)
//Описание: Разместить описание переменных в первых строках массив-образа объекта 
//Категория: ООП
Функция ПереместитьПеременВперед(М)
	М2 = Новый Массив;		 
	Для сч=0 По М.Количество()-1 Цикл  //---------- сначала все переменные   
	   Если СтрНайти(М[сч],"Перем ") Тогда  М2.Добавить(М[сч]);  КонецЕсли;
    КонецЦикла;
	Для сч=1 По М.Количество()-1 Цикл     //----- потом функции кроме переменных
	    стр = СокрЛП(М[сч]);    Если стр<>"" И НЕ СтрНайти(стр,"Перем ") Тогда М2.Добавить(стр); КонецЕсли;
    КонецЦикла;
	Возврат М2;
КонецФункции

//Имя: ВысветитьОбъектВЦвете(Знач М, Знач В, Знач Ш, Знач ЦФ, Знач ЦТ)
//Описание: Высветить массив в заданном цвете ЦФ,ЦТ по указанным координатам В,Ш для консоли (функция используется в методах объекта) 
//Категория: ООП Консоль
Процедура ВысветитьОбъектВЦвете(Знач М, Знач В, Знач Ш, Знач ЦФ, Знач ЦТ) экспорт
     Консоль.ЦветФона = ЦФ;  Консоль.ЦветТекста = ЦТ;    
	Для Сч = 0 По М.Количество() - 1 Цикл
      Консоль.КурсорЛево = Ш;   Консоль.КурсорВерх = В+Сч;  Консоль.Вывести(М[сч]);   
    КонецЦикла;    
КонецПроцедуры

//Имя: ОбновитьЭкранОбъектов()
//Описание: Обновляет изображение консольного экрана из массива экран, содержащего указатели на экранные объекты 
//Категория: ООП Консоль
Процедура ОбновитьЭкранОбъектов()  экспорт
   Кол = Экран.Количество();  
   Для сч=0 По Кол-1 Цикл Если НЕ Экран[сч]=0 И НЕ Экран[сч].Скрытый Тогда Экран[сч].Нарисовать(); КонецЕсли; КонецЦикла;
КонецПроцедуры      

//Имя: СоздатьМодальноеОкноВопросДаНет(Y,X,М,ФДТ,U)
//Описание: Модальное окно в консоле с вопросом ДаНет 
//Категория: ООП Консоль Окно
Функция СоздатьМодальноеОкноВопросДаНет(Y,X,М,ФДТ,U) экспорт
    В=СоздатьПрямоугольник(Y, X,"",U, М);   В.ЦветФона = ЦветКонсоли.Бирюза; В.Нарисовать();  
    Гp=СоздатьГруппуОбъектов(2,U);  К=М.Количество()-2;
    Гp.ДобавитьПассивныйЭлементВГруппу(В);		
	М = Новый Массив;  М.Добавить("|  Да   |"); Кн=СоздатьКнопку(Y+К, X+5,"",ФДТ+"(1)",U, М);
	Гp.ДобавитьЭлементВГруппу(Кн);
	М = Новый Массив;  М.Добавить("|  Нет  |"); Кн=СоздатьКнопку(Y+К, X+15,"",ФДТ+"(2)",U, М);
	Гp.ДобавитьЭлементВГруппу(Кн);
    Возврат Гp;	
КонецФункции

//Имя: ОбработатьНажатияМодальногоОкна(Гp)
//Описание: Обработка нажатий клавиш модального окна в консоле с вопросом ДаНет 
//Категория: ООП Консоль Окно
Функция ОбработатьНажатияМодальногоОкна(Гp)  экспорт
  Гp.Нарисовать();  ПродолжитьРаботу=Истина;  
  Гp.АктивироватьЭлемент(0);
  Клавиша = Консоль.Прочитать();   
  Пока ПродолжитьРаботу Цикл
	ПродолжитьРаботу=Гp.ОбработатьНажатия(Клавиша);
    Клавиша = Консоль.Прочитать();
  КонецЦикла;  
  Гp.Скрытый=Истина; ОбновитьЭкранОбъектов();  Возврат Истина;
КонецФункции

//#КонецОбласти

//#Область ОбразыОбъектовООП

//Имя: ОбразОбъектБазовый(М)
//Описание: Создание массива-образа для объекта Базовый родителя всех объектов 
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектБазовый(М) экспорт                           // -----------   Базовый
   М.Добавить("Перем Экран Экспорт; Перем Индекс Экспорт;  Перем ТипОбъекта Экспорт; Перем Скрытый Экспорт; ");
   М.Добавить("Функция РегистрацияНаЭкране(UfaS,Гл) экспорт UfaScript=UfaS; Индекс=UfaScript.Экран.Количество();  "
      +"  UfaScript.Экран.Добавить(НашОбъект);  ГлМодуль=Гл;   КонецФункции ");
   Возврат М;
КонецФункции   // ИмяОбъекта=""Базовый"";   

//Имя: СоздатьСтрокуТекста(Y1,X1,Текст1,ЦФ,ЦТ,Имя,U)
//Описание: Создать объект экрана для высвечивания строки в консоле Y1,X1-координаты, Текст1-текст строки, ЦФ,ЦТ-цвет фона и цвет текста, U-Указатель на библиотеку UfaScript  
//Категория: ООП Консоль Объект
Функция СоздатьСтрокуТекста(Y1,X1,Текст1,ЦФ,ЦТ,Имя,U) экспорт    //  ТипОбъекта = 1   ------------------  Экрана
  П1=СоздатьООПОбъектИзМассива(Имя,ОбразОбъектЭкрана(Новый Массив));
  П1.Y = Y1;    П1.X = X1;  П1.Текст = Текст1; П1.ЦветФона=ЦФ; П1.ЦветТекста=ЦТ;  
  П1.РегистрацияНаЭкране(ЭтотОбъект,U);   Возврат П1;
КонецФункции

//Имя: ОбразОбъектЭкрана(М)
//Описание: Создать массивОбъект для создания объекта ТекстЭкрана
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектЭкрана(М) экспорт      
   М=ОбразОбъектБазовый(М);
   М.Добавить("Перем Y экспорт; Перем X экспорт; Перем Текст Экспорт; "+
         "Перем ЦветФона Экспорт; Перем ЦветТекста Экспорт;   ");
    М.Добавить("Функция Конструктор() экспорт Y=1; X=1; ТипОбъекта=1; Текст=ИмяОбъекта; ЦветФона = ЦветКонсоли.Зеленый; "+
       "ЦветТекста = ЦветКонсоли.Черный;  ИмяОбъекта=""ЭлементЭкрана"";  Скрытый=Ложь; КонецФункции ");
	М.Добавить("Функция Нарисовать() экспорт UfaScript.Консоль.ЦветФона = ЦветФона; UfaScript.Консоль.КурсорВерх = Y; "+
        "UfaScript.Консоль.КурсорЛево = X;  UfaScript.Консоль.ЦветТекста = ЦветТекста;  UfaScript.Консоль.Вывести(Текст); "+
		 " КонецФункции ");
   Возврат М;
КонецФункции

//Имя: СоздатьПолеВвода(Y1,X1,Текст1,Имя,U)
//Описание: Создать Объект для ввода строки пользователем
//Категория: ООП Консоль Объект 
Функция СоздатьПолеВвода(Y1,X1,Текст1,Имя,U) экспорт    //  ТипОбъекта = 10   ----------------  ПолеВвода
  П1=СоздатьООПОбъектИзМассива(Имя,ОбразОбъектПолеВвода(Новый Массив));
  П1.Y = Y1;    П1.X = X1;  П1.Текст = Текст1;  П1.РегистрацияНаЭкране(ЭтотОбъект,U);    Возврат П1;
КонецФункции

//Имя: ПереходВРедактированиеСтроки(Стр,Длина)
//Описание: Функция при переходе в режим редактирования объекта для ввода данный из строки пользователем Стр - строка для редактирования, Длина - макс.длина строки
//Категория: ООП Консоль Объект 
Функция  ПереходВРедактированиеСтроки(Стр,Длина)  экспорт
    Нач = Консоль.КурсорЛево;    Консоль.Вывести(СоздатьСтрокуСимволов(" ",Длина));  Консоль.КурсорЛево=Нач;
    Клавиша = Консоль.Прочитать();  Д=Длина;
    Пока НЕ (Клавиша = 40 ИЛИ Клавиша = 38 ИЛИ Клавиша = 13 ИЛИ Клавиша = 27) Цикл
  	   Если ((Клавиша >= 32 И Клавиша <= 123) ИЛИ (Клавиша >= 192 И Клавиша <= 255)) ИЛИ 
	      (Клавиша  >= 16 И Клавиша <= 18) И Д>0 И Д<Длина Тогда 
  	       X=Консоль.КурсорЛево; С1=Символ(Клавиша);	Консоль.Вывести(С1+СоздатьСтрокуСимволов(" ",Д));
		   Консоль.КурсорЛево=X+1;    Стр=Стр+С1;	 Д=Д-1;
       ИначеЕсли Клавиша=8 И Д<Длина Тогда Стр=Лев(Стр,СтрДлина(Стр)-1);  Консоль.КурсорЛево = Консоль.КурсорЛево-1; 
	        Консоль.Вывести(" ");    Д=Д+1; Консоль.КурсорЛево = Консоль.КурсорЛево-1;
	   КонецЕсли;
       Клавиша = Консоль.Прочитать();
	КонецЦикла;  Возврат  Стр+СоздатьСтрокуСимволов(" ",Д);   
КонецФункции

//Имя: ОбразОбъектПолеВвода(М)
//Описание: Создать массивОбъект для создания объекта Ввода текста пользователем
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектПолеВвода(М) экспорт    
   М=ОбразОбъектЭкрана(М);   М.Добавить("Перем ДлинаТекста Экспорт;");
   М.Добавить("#Переименовать Конструктор РодитКонструктор");
    М.Добавить("Функция Конструктор() экспорт   РодитКонструктор(); Y=10; X=10; ТипОбъекта=2;  ДлинаТекста = 25; "+
     "	ЦветФона = ЦветКонсоли.Белый; ЦветТекста = ЦветКонсоли.Черный; Скрытый=Ложь;  КонецФункции ");
    М.Добавить("Функция Действие() экспорт UfaScript.Консоль.ЦветФона = ЦветКонсоли.Белый;  UfaScript.Консоль.КурсорЛево = X; "+
         " ВвестиСтроку(Текст,30);   Возврат Истина;  КонецФункции ");   
	 Возврат М;
КонецФункции                        

//Имя: СоздатьСтрокуВыбора(Y1,X1,Текст1,Имя,ФД,U)
//Описание: Строка выбора. При активной строке нажатие клавиши Ввод - вызов заданной функции (типа кнопки в одну строку) ФД- имя функции для вызова
//Категория: ООП Консоль Объект 
Функция СоздатьСтрокуВыбора(Y1,X1,Текст1,Имя,ФД,U) экспорт    //  ТипОбъекта = 11   ----------  СтрокаВыбора
  П1=СоздатьООПОбъектИзМассива(Имя,ОбразОбъектСтрокаВыбора(Новый Массив)); ТипОбъекта = 11;
  П1.РегистрацияДанных(Y1,X1,Текст1,ФД,ЭтотОбъект,U);    Возврат П1;
КонецФункции

//Имя: ОбразОбъектСтрокаВыбора(М)
//Описание: МассивОбъект для объекта типа кнопки в одну строку
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектСтрокаВыбора(М) экспорт    
  М=ОбразОбъектЭкрана(М);     М.Добавить("Перем Функц;"); 
  М.Добавить("Функция РегистрацияДанных(Y1,X1,Текст1,ФД,U,Гл) экспорт  Y=Y1; X=X1; Текст=Текст1; "+
	"  ТипОбъекта=11; РегистрацияНаЭкране(U,Гл); Функц=ФД; КонецФункции ");
   М.Добавить("Функция Действие() экспорт возврат  UfaScript.ВызватьФункцию(Функц,ГлМодуль).Результат();  КонецФункции ");    
   Возврат М;
КонецФункции  

//Имя: СоздатьСтрокиВыбора(Y1,X1,М,T,ФДТ,U)
//Описание: Создать вертикальный массив строк выбора. Y1,X1- нач.координата, М - массив со строками, ФДТ - имя функции при выборе, U - указатель на UfaScript 
//Категория: ООП Консоль Объект 
Функция СоздатьСтрокиВыбора(Y1,X1,М,T,ФДТ,U) экспорт
   М2 = Новый Массив;     М2.Добавить(T);  
   Для сч=0 По М.Количество() - 1 Цикл  М2.Добавить("|"+СоздатьСтрокуСимволов(" ",СтрДлина(T)-2)+"|");   КонецЦикла;
   М2.Добавить("|"+СоздатьСтрокуСимволов("=",СтрДлина(T)-2)+"|"); 
   СоздатьПрямоугольник(Y1, X1,"",U, М2);	Гp3=СоздатьГруппуОбъектов(1,U); 
	Для сч = 0 По М.Количество() - 1 Цикл
       Гp3.ДобавитьЭлементВГруппу(СоздатьСтрокуВыбора(Y1+1+сч,X1+2,М[сч],"",ФДТ+"("+сч+")",U));
    КонецЦикла;   Возврат Гp3;
КонецФункции

//Имя: СоздатьПрямоугольник(Y,X,Имя,U,МТ)
//Описание: Создать прямоугольник из текстовых строк. Y1,X1- нач.координата, МТ - массив со строками, U - указатель на UfaScript 
//Категория: ООП Консоль Объект 
Функция СоздатьПрямоугольник(Y,X,Имя,U,МТ) экспорт   //  ТипОбъекта = 2   ----------------  Прямоугольник
  Кн1=СоздатьООПОбъектИзМассива(Имя,ОбразОбъектКнопка(Новый Массив));  Кн1.ТипОбъекта = 2;
  Кн1.РегистрацияДанных(Y,X," ",ЭтотОбъект,U); Кн1.МассивТекста=МТ;   Кн1.ИмяОбъекта="Прямоугольник";  Возврат Кн1;
КонецФункции

//Имя: НарисоватьООПРамкуНаВесьЭкран(U)
//Описание: Нарисовать фоновую рамку для консоли с объектами 
//Категория: ООП Консоль Объект 
Процедура НарисоватьООПРамкуНаВесьЭкран(U) экспорт
    С = СоздатьСтрокуСимволов("*",Консоль.Ширина);    С2 = "*"+СоздатьСтрокуСимволов(" ",Консоль.Ширина-2)+"*";
	М = Новый Массив;    М.Добавить(С);    
   	Для Сч = 1 По Консоль.Высота - 4 Цикл      М.Добавить(С2);	КонецЦикла;    М.Добавить(С);    
    Кн1=СоздатьООПОбъектИзМассива("Рамка",ОбразОбъектПрямоугольник(Новый Массив));  
    Кн1.РегистрацияДанных(0,0," ",ЭтотОбъект,U); Кн1.МассивТекста=М; Кн1.ИмяОбъекта="Рамка";
	Кн1.ЦветФона=ЦветКонсоли.Желтый;  Кн1.ЦветТекста=ЦветКонсоли.Красный;    
КонецПроцедуры

//Имя: ОбразОбъектПрямоугольник(М)
//Описание: МассивОбъект для объекта Прямогольник (массив строк)
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектПрямоугольник(М) экспорт     
   М=ОбразОбъектЭкрана(М);   М.Добавить("Перем МассивТекста экспорт; ");     М.Добавить("#Удалить Нарисовать");   
   М.Добавить("Функция Нарисовать() экспорт  UfaScript.ВысветитьОбъектВЦвете(МассивТекста, Y, X, ЦветФона, ЦветТекста);  КонецФункции ");
   М.Добавить("Функция РегистрацияДанных(Y1,X1,Текст1,U,Гл) экспорт  Y=Y1; X=X1; Текст=Текст1;"+
	"    ТипОбъекта=2; РегистрацияНаЭкране(U,Гл);  КонецФункции ");
   Возврат М;
КонецФункции

//Имя: СоздатьКнопку(Y,X,Имя,ФД,U,МТ)
//Описание: Создать кнопку из строкового массива МТ с действием функции ФД 
//Категория: ООП Консоль Объект 
Функция СоздатьКнопку(Y,X,Имя,ФД,U,МТ) экспорт
  Кн1=СоздатьООПОбъектИзМассива(Имя,ОбразОбъектКнопка(Новый Массив));   Кн1.ТипОбъекта = 11;  Кн1.ИмяОбъекта="Кнопка";
  Кн1.РегистрацияДанных(Y,X," ",ЭтотОбъект,U); Кн1.МассивТекста=МТ;   Кн1.Функц=ФД;    Возврат Кн1;
КонецФункции

//Имя: ОбразОбъектКнопка(М)
//Описание: МассивОбъект для объекта Кнопка потомок объекта Прямоугольник
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектКнопка(М) экспорт
   М=ОбразОбъектПрямоугольник(М);   М.Добавить("Перем Функц экспорт;");      
   М.Добавить("Функция Действие() экспорт   Возврат UfaScript.ВызватьФункцию(Функц,ГлМодуль).Результат();  КонецФункции ");    
   Возврат М;
КонецФункции

//Имя: СоздатьКнопку20(Y,X,Текст,Имя,ФД,U)
//Описание: Создать кнопку с текстом Текст с действием функции ФД шириной 20 символов 
//Категория: ООП Консоль Объект 
Функция СоздатьКнопку20(Y,X,Текст,Имя,ФД,U) экспорт   //  ТипОбъекта = 20   --------------- Кнопка20
  Кн1=СоздатьООПОбъектИзМассива(Имя,ОбразОбъектКнопка20(Новый Массив));  Кн1.ТипОбъекта = 20;  Кн1.ИмяОбъекта="Кнопка20";
  Кн1.СоздатьМассивКнопки(Y,X,Текст,ФД,ЭтотОбъект,U);    Возврат Кн1;
КонецФункции

//Имя: ОбразОбъектКнопка20(М)
//Описание: МассивОбъект для объекта Кнопка шириной 20 символов и высоток в 3 строки (потомок объекта Кнопка)
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектКнопка20(М) экспорт       
   М=ОбразОбъектКнопка(М);
   М.Добавить("#Удалить Изобразить");   
   М.Добавить("Функция Изобразить() экспорт  "+
  "       М1=Новый Массив; М1.Добавить(""+-----------------+""); "+
                      "    М1.Добавить(""|"" + Текст +   ""|""); "+
                      "    М1.Добавить(""+-----------------+""); МассивТекста=М1; КонецФункции ");   Возврат М;
КонецФункции

//Имя: СоздатьГруппуОбъектов(Тип,U)
//Описание: Создать группу для объектов. Если Тип=1 то группа вертикальная управление стрелки вверх-вниз, Тип=2 - горизонтальная (стрелки вправо-влево) 
//Категория: ООП Консоль Объект 
Функция СоздатьГруппуОбъектов(Тип,U)  экспорт
   Если Тип=1 Тогда М = ОбразОбъектГруппы(Новый Массив); ИначеЕсли Тип=2 Тогда 
                                  М = ОбразОбъектГруппыГоризонт(Новый Массив);  КонецЕсли;
	Гp1=СоздатьООПОбъектИзМассива("Группа",М);	Гp1.РегистрацияНаЭкране(ЭтотОбъект,U);    Возврат Гp1;
КонецФункции

//Имя: ОбразОбъектГруппы(М)
//Описание: МассивОбъект для объекта Группа (потомок объекта Базовый)
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектГруппы(М) экспорт
   М=ОбразОбъектБазовый(М);
   М.Добавить("Перем АктивГруппы Экспорт; Перем ПассивГруппы Экспорт; Перем АктивИндекс экспорт;  Перем АктивЦветФона  экспорт; Перем И1;"+
       "Перем ЦветФона  экспорт; ");
   М.Добавить("Функция Конструктор() экспорт АктивГруппы = Новый Массив; ПассивГруппы = Новый Массив; АктивИндекс=-1; "+
       "АктивЦветФона=ЦветКонсоли.Синий; ТипОбъекта=30; ИмяОбъекта=""Группа""; Скрытый=Ложь; КонецФункции ");
   М.Добавить("Функция ДобавитьЭлементВГруппу(Об) экспорт И1=Об.Индекс;   UfaScript.Экран[И1]=0; АктивИндекс=АктивИндекс+1; "+
       "Об.Индекс= АктивГруппы.Количество();   АктивГруппы.Добавить(Об); Об.Экран=НашОбъект; ЦветФона=Об.ЦветФона; КонецФункции ");
   М.Добавить("Функция ДобавитьПассивныйЭлементВГруппу(Об) экспорт И1=Об.Индекс;   UfaScript.Экран[И1]=0;  "+
       "Об.Индекс=ПассивГруппы.Количество();  ПассивГруппы.Добавить(Об);   Об.Экран=НашОбъект; КонецФункции ");
   М.Добавить("Функция АктивироватьЭлемент(Инд) экспорт  Если АктивГруппы.Количество()=0 Тогда "+
    "  Возврат 0; КонецЕсли; АктивГруппы[АктивИндекс].ЦветФона=ЦветФона; Если Инд<0 Тогда  "+
    " АктивГруппы[АктивИндекс].Нарисовать();  Возврат 0; КонецЕсли; АктивГруппы[АктивИндекс].Нарисовать(); "+
	" АктивИндекс=Инд;  АктивГруппы[Инд].ЦветФона=АктивЦветФона; АктивГруппы[Инд].Нарисовать(); КонецФункции ");
   М.Добавить("Функция Нарисовать() экспорт   "+
       " Для сч=0 По АктивГруппы.Количество()-1 Цикл  АктивГруппы[сч].Нарисовать();    КонецЦикла;      "+
       "  Для сч=0 По ПассивГруппы.Количество()-1 Цикл  ПассивГруппы[сч].Нарисовать();    КонецЦикла;   КонецФункции ");
   М.Добавить("Функция ОбработатьНажатия(Клавиша) экспорт Если Клавиша=27 Тогда  Возврат Ложь; ИначеЕсли "+
       "  Клавиша=38 Тогда  Если АктивИндекс>0 Тогда АктивироватьЭлемент(АктивИндекс-1); КонецЕсли;    ИначеЕсли "+
        "  Клавиша=40 Тогда Если АктивИндекс<АктивГруппы.Количество()-1  Тогда АктивироватьЭлемент(АктивИндекс+1); "+
		  " КонецЕсли; ИначеЕсли Клавиша=13 Тогда Возврат АктивГруппы[АктивИндекс].Действие(); КонецЕсли;   "+
		   "  Возврат Истина; КонецФункции "); 
    Возврат М;
КонецФункции

//Имя: ОбразОбъектГруппыГоризонт(М)
//Описание: МассивОбъект для объекта Группа горизонтальная (потомок объекта Группы) Активные объекты следует располагать по горизонтали. 
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектГруппыГоризонт(М) экспорт
   М=ОбразОбъектГруппы(М);
   М.Добавить("#Удалить ОбработатьНажатия");
   М.Добавить("Функция ОбработатьНажатия(Клавиша) экспорт Если Клавиша=27 Тогда  Возврат Ложь; ИначеЕсли "+
       "  Клавиша=37 Тогда  Если АктивИндекс>0 Тогда АктивироватьЭлемент(АктивИндекс-1); КонецЕсли;    ИначеЕсли "+
        "  Клавиша=39 Тогда Если АктивИндекс<АктивГруппы.Количество()-1  Тогда АктивироватьЭлемент(АктивИндекс+1); "+
		  " КонецЕсли; ИначеЕсли Клавиша=13 Тогда  Возврат АктивГруппы[АктивИндекс].Действие(); КонецЕсли;   Возврат Истина; КонецФункции "); 
    Возврат М;
КонецФункции

//Имя: СоздатьСтрокуПрогресса(Y1,X1,T,U)
//Описание: Создать строку прогресса с заголовком из строки Т и шириной равной ширине строки Т
//Категория: ООП Консоль Объект 
Функция СоздатьСтрокуПрогресса(Y1,X1,T,U) экспорт
   Гр=СоздатьООПОбъектИзМассива("",ОбразОбъектПрогресс(Новый Массив)); Д=СтрДлина(T);
   Гр.РегистрацияНаЭкране(ЭтотОбъект,U);  Гр.Y=Y1;  Гр.X=X1; Гр.Заголовок = T;  Гр.Длина=Д;
   МТ=Новый Массив;  МТ.Добавить(T);   МТ.Добавить("|"+СоздатьСтрокуСимволов(" ",Д-2)+"|"); 
   МТ.Добавить(СоздатьСтрокуСимволов("=",Д));   Пр=СоздатьПрямоугольник(Y1,X1,"",U,МТ);
   Гр.ДобавитьПассивныйЭлементВГруппу(Пр);    Гр.ИмяОбъекта = "Прогресс";
   Стр=СоздатьСтрокуТекста(Y1+1,X1+1,СоздатьСтрокуСимволов(" ",Д-2),ЦветКонсоли.Серый,ЦветКонсоли.Белый,"",U);
   Гр.ДобавитьПассивныйЭлементВГруппу(Стр); Гр.Уровень = 0;  стр=СоздатьСтрокуСимволов(" ",Гр.Уровень);
   Гр.Прогресс=СоздатьСтрокуТекста(Y1+1,X1+1,стр,ЦветКонсоли.Черный, ЦветКонсоли.Белый,"",U);
   Гр.ДобавитьПассивныйЭлементВГруппу(Гр.Прогресс);      Возврат Гр;
КонецФункции

//Имя: ОбразОбъектПрогресс(М)
//Описание: МассивОбъект для объекта Прогресс (потомок объекта Группы)  Метод НарисоватьПрогресс(Д) Меняет позицию ползунка Д - длина которую надо установить
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектПрогресс(М) экспорт
   М=ОбразОбъектГруппы(М);
   М.Добавить("Перем Заголовок экспорт; Перем Y экспорт; Перем X экспорт; Перем Длина экспорт; "+
    " Перем Уровень  экспорт; Перем Прогресс экспорт;  ");
   М.Добавить("Функция НарисоватьПрогресс(Д) экспорт Если Д>Длина-2 Тогда Д=Длина-2; КонецЕсли; "+
    " Если Д<0 Тогда Д=0; КонецЕсли;  Прогресс.Текст=UfaScript.СоздатьСтрокуСимволов("" "",Д); "+
        " Уровень=Д;  ПассивГруппы[1].Нарисовать();  Прогресс.Нарисовать();  КонецФункции ");
   М.Добавить("Функция Переместить(Y,X) экспорт Y1=Y; X1=X;  ПассивГруппы[0].Y=Y; ПассивГруппы[0].X=X; "+
     " ПассивГруппы[1].Y=Y+1; ПассивГруппы[1].X=X+1; Прогресс.Y=Y+1;   Прогресс.X=X+1; Нарисовать(); "+
	 " КонецФункции ");
   М.Добавить("#Удалить АктивироватьЭлемент");
   М.Добавить("Функция АктивироватьЭлемент(Инд) экспорт  Если Инд=-1 Тогда ПассивГруппы[0].ЦветФона = ЦветКонсоли.Зеленый; "+
    " ИначеЕсли Инд<>-1 Тогда  ПассивГруппы[0].ЦветФона = ЦветКонсоли.Синий;  КонецЕсли; Нарисовать(); "+
	" КонецФункции  ");   Возврат М; 
КонецФункции

//Имя: ПросмотрМодально(Об)
//Описание: Высветить объект Об модально
//Категория: ООП Консоль Объект Модально 
Функция ПросмотрМодально(Об) экспорт
   Об.Нарисовать();
	Клавиша = Консоль.Прочитать();    ПродолжитьРаботу=Истина;  Об.АктивироватьЭлемент(0); 
 	Пока ПродолжитьРаботу Цикл 
      Если Клавиша=9 ИЛИ Клавиша=27 Тогда  Прервать;  КонецЕсли;	
      ПродолжитьРаботу=Об.ОбработатьНажатия(Клавиша);
	  Клавиша = Консоль.Прочитать();
	КонецЦикла;	ОбновитьЭкранОбъектов();
КонецФункции

//Имя: ПросмотрТекста(Y1,X1,Y2,T,М,U)
//Описание: Просмотр массива строк М в окне шириной Т (строка заголовок окна) и высотой Y2. Прокрутка просмотра стрелками.
//Категория: ООП Консоль Объект Текст
Функция ПросмотрТекста(Y1,X1,Y2,T,М,U) экспорт
   Гр=СоздатьООПОбъектИзМассива("",ОбразОбъектПросмотрТекста(Новый Массив)); Д=СтрДлина(T);
   Гр.РегистрацияНаЭкране(ЭтотОбъект,U);    Гр.Y1=Y1;  Гр.X1=X1; Гр.Y2=Y2; Гр.X2=X1+Д;
   МТ=Новый Массив;  МТ.Добавить(T);   Гр.Заголовок = T;  Гр.МассивТекста = ЗаменитьТабНаПробелы(М);  
   Гр.ДлинаТекста=ОпределитьМаксДлинуСтрокиВМассиве(Гр.МассивТекста);
   Для сч=0 По Y2-Y1 Цикл  МТ.Добавить("|"+СоздатьСтрокуСимволов(" ",Д-2)+"|");  КонецЦикла;
   МТ.Добавить(СоздатьСтрокуСимволов("=",Д));   Гр.Рамка=СоздатьПрямоугольник(Y1,X1,"",U,МТ);
   Гр.ДобавитьПассивныйЭлементВГруппу(Гр.Рамка);   Гр.sY=0; Гр.sX=0;   
   Консоль.ЦветФона=ЦветКонсоли.Зеленый;   Консоль.ЦветТекста=ЦветКонсоли.Черный;
   Гр.ВидТекст = СегментМассиваСоздать(0,0,Y2-Y1,Д-2,Гр.МассивТекста); 
   Для сч=0 По Гр.ВидТекст.Количество()-1 Цикл
      стр=СоздатьСтрокуТекста(Y1+сч+1,X1+1,Гр.ВидТекст[сч],Консоль.ЦветФона,Консоль.ЦветТекста,"",U);   
      Гр.ДобавитьПассивныйЭлементВГруппу(стр);   
   КонецЦикла;	     Возврат Гр;
КонецФункции

//Имя: СегментМассиваСоздать(Y1,X1,Y2,X2,M)
//Описание: Вырезать квадратный сегмент из массива М по координатам Y1,X1,Y2,X2
//Категория: Текст Массив
Функция СегментМассиваСоздать(Y1,X1,Y2,X2,M)
  M1=Новый Массив; 
  Если Y1<M.Количество() Тогда
     Если Y2>=M.Количество() Тогда Y2=M.Количество()-1;  КонецЕсли; 
     Для сч=Y1 По Y2 Цикл M1.Добавить(Сред(M[сч],X1,X2));  КонецЦикла;  
  КонецЕсли;   Возврат M1;
КонецФункции

//Имя: СегментМассиваИзменить(Y1,X1,Y2,X2,M1,М2)
//Описание: Вырезать квадратный сегмент из массива М2 по координатам Y1,X1,Y2,X2 и заполнить массив М1
//Категория: Текст Массив
Функция СегментМассиваИзменить(Y1,X1,Y2,X2,M1,М2)  экспорт
   сч1=0;   Для сч=Y1 По Y2-1 Цикл  стр=Сред(М2[сч],X1,X2);  M1[сч1]=стр; сч1=сч1+1; КонецЦикла;  Возврат M1;
КонецФункции

//Имя: ОбразОбъектПросмотрТекста(М)
//Описание: МассивОбъект для объекта Просмотр текста (потомок объекта Группы)  
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектПросмотрТекста(М) экспорт
   М=ОбразОбъектГруппы(М);
   М.Добавить("Перем Заголовок экспорт; Перем Y1 экспорт; Перем X1 экспорт;  Перем Y2 экспорт; "+
    " Перем X2 экспорт;  Перем МассивТекста экспорт; Перем ДлинаТекста экспорт; Перем ВидТекст экспорт; "+
	" Перем sY экспорт; Перем sX экспорт; Перем Рамка экспорт; ");
   М.Добавить("Функция НарисоватьТекст() экспорт Рамка.Нарисовать(); Для сч=1 По ПассивГруппы.Количество()-1 Цикл "+
    " ПассивГруппы[сч].Нарисовать(); КонецЦикла; КонецФункции ");
   М.Добавить("Функция СместитьТекст(Y,X) экспорт Если sY+Y<0 Тогда sY=0; Возврат 0; КонецЕсли; "+
    " Если sX+X<0 Тогда sX=0;  Возврат 0; КонецЕсли; Если Y>0 И (sY+Y)+Y2-Y1+1>МассивТекста.Количество()-1 Тогда "+
    " Возврат 0; КонецЕсли; Если X>0 И (sX+X)>(ДлинаТекста-(X2-X1)+3) Тогда  Возврат 0;  КонецЕсли; sY=sY+Y; sX=sX+X; "+  
	" Если sY+Y2-Y1>МассивТекста.Количество()-1 Тогда K=МассивТекста.Количество()-1; ИначеЕсли "+
    " sY+Y2-Y1<МассивТекста.Количество()-1	тогда K=sY+Y2-Y1;  КонецЕсли; "+
	" Для сч=sY По K Цикл стр=Сред(МассивТекста[сч],sX,X2-X1-2); ВидТекст[сч-sY]=стр; КонецЦикла; "+
    " Для сч=1 По ПассивГруппы.Количество()-1 Цикл ПассивГруппы[сч].Текст=ВидТекст[сч-1];  "+
	" ПассивГруппы[сч].Нарисовать(); КонецЦикла;  КонецФункции ");      
   М.Добавить("#Удалить ОбработатьНажатия");
   М.Добавить("Функция ОбработатьНажатия(Клавиша) экспорт Если Клавиша=27 Тогда  Возврат Ложь; ИначеЕсли "+
    " Клавиша=38 Тогда  СместитьТекст(-1,0);  ИначеЕсли Клавиша=40 Тогда СместитьТекст(1,0); "+
    " ИначеЕсли Клавиша=37 Тогда СместитьТекст(0,-1); ИначеЕсли Клавиша=39 Тогда  СместитьТекст(0,1); "+
	" КонецЕсли;  Возврат Истина;  КонецФункции ");    
   М.Добавить("#Удалить АктивироватьЭлемент");
   М.Добавить("Функция АктивироватьЭлемент(Инд) экспорт  Если Инд=-1 Тогда  Рамка.ЦветФона = ЦветКонсоли.Зеленый; "+
    " ИначеЕсли Инд<>-1 Тогда  Рамка.ЦветФона = ЦветКонсоли.Синий;  КонецЕсли; Нарисовать();  КонецФункции  ");
    Возврат М;
КонецФункции

//#КонецОбласти

//Имя: КопияМассива(М)
//Описание: Создать новый массив копию массива М
//Категория: Текст Массив
Функция КопияМассива(М) экспорт
 	 М1 = Новый Массив;  Для сч=0 По М.Количество()-1 Цикл  М1.Добавить(М[сч]); КонецЦикла; Возврат М1;
КонецФункции

//Имя: ДобавитьСтрокиВМассивСПромежутком(Знач М)
//Описание: Добавить пустые строки между строками массива М. Используется, чтоб раздвинуть текст, если высота консоли позволяет
//Категория: Текст Массив
Функция ДобавитьСтрокиВМассивСПромежутком(Знач М)  экспорт
    Если Консоль.Высота < 45 Тогда      Возврат М;
	ИначеЕсли  Консоль.Высота >= 45 Тогда   M1 = Новый Массив;
	   Для сч=0 По М.Количество()-1 Цикл     M1.Добавить(М[сч]);  M1.Добавить("");   КонецЦикла;
    КонецЕсли;   Возврат M1;
КонецФункции

//Имя: ВыполнитьКоманднуюСтроку(Команда)
//Описание: Записывает команду в батфайл и запускает на исполнение, чтоб можно было запустить системные команды, которые не запускаются через  ЗапуститьПриложение
//Категория: Система
Процедура ВыполнитьКоманднуюСтроку(Команда) экспорт
  // V1=ТекущаяУниверсальнаяДатаВМиллисекундах();
   Ф = Новый ЗаписьТекста;  Ф.Открыть("Cmdcom.bat");   
   Ф.ЗаписатьСтроку("rem"); Ф.ЗаписатьСтроку(Команда); 
   Ф.Закрыть();      ЗапуститьПриложение("Cmdcom.bat");
  // Сообщить(ТекущаяУниверсальнаяДатаВМиллисекундах()-V1);
КонецПроцедуры


//--------------  Функции для формирования index.php для Joomla ----------------------------------------
//Имя: ПРОЦЕСС_НачалоДляJoomla()
//Описание: Начало записи файла index.php
//Категория: HTML Joomla PHP CSS
Функция ПРОЦЕСС_НачалоДляJoomla() экспорт
  Запись = Новый ЗаписьТекста;  Запись.Открыть("index.php");
  Запись.ЗаписатьСтроку("<?php defined('_JEXEC') or die; $doc = JFactory::getDocument(); $JUri =  JUri::base(TRUE); $LOGOTIP = JText::_(""TPL_UFAJOOM37_LOGOTIP""); "+
   "$doc->addStyleSheet($JUri.""/templates/"".$doc->template.""/css/style.css""); if ($showRightColumn == 0 and $showleft == 0) {$showno = 0;} "+
   "$this->setHtml5(true); ?>");
  Запись.ЗаписатьСтроку("<style type=""text/css"">");
КонецФункции

//Имя: ПРОЦЕСС_Начало(ИмяФайла)
//Описание: Начало записи файла ИмяФайла
//Категория: HTML PHP CSS
Функция ПРОЦЕСС_Начало(ИмяФайла) экспорт
  Запись = Новый ЗаписьТекста;  Запись.Открыть(ИмяФайла);
  Запись.ЗаписатьСтроку("<!DOCTYPE html ><html><style type=""text/css"">");
КонецФункции

//Имя: ПРОЦЕСС_ЦентрДляJoomla()
//Описание: Начало <body> тега в файле index.php
//Категория: HTML Joomla PHP CSS
Функция ПРОЦЕСС_ЦентрДляJoomla() экспорт
  Запись.ЗаписатьСтроку("<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd""> "+
    "<html xmlns=""http://www.w3.org/1999/xhtml"" lang=""<?php echo $this->language; ?>"" dir=""<?php echo $this->direction; ?>""><head>"+
    "<meta name=""viewport"" content=""width=device-width, initial-scale=1.0, maximum-scale=3.0, user-scalable=yes""/>"+
    "<meta name=""HandheldFriendly"" content=""true"" /><meta name=""apple-mobile-web-app-capable"" content=""YES"" /><jdoc:include type=""head"" /></head>");
  Запись.ЗаписатьСтроку("<?php ini_set(""default_charset"" ,""utf8""); ?>");
  Запись.ЗаписатьСтроку("<body id=""thebody""><div class=""Baza"">");
КонецФункции

//Имя: ПРОЦЕСС_Центр()
//Описание: Начало <body> тега в файле index.php
//Категория: HTML Joomla PHP CSS
Функция ПРОЦЕСС_Центр() экспорт
  Запись.ЗаписатьСтроку("<?php ini_set(""default_charset"" ,""utf8""); ?>");
  Запись.ЗаписатьСтроку("<body id=""thebody""><div class=""Baza"">");
КонецФункции

//Имя: ПРОЦЕСС_Окончание()
//Описание: Окончание файла index.php
//Категория: HTML Joomla 
Функция ПРОЦЕСС_Окончание() экспорт
  Запись.ЗаписатьСтроку("</div></body></html>");
  Запись.Закрыть();
КонецФункции

//Имя: Запись_ЗаписатьПозицию(ИмяПозиции)
//Описание: Записать позицию для Joomla
//Категория: HTML Joomla 
Функция Запись_ЗаписатьПозицию(ИмяПозиции) экспорт
   Запись.ЗаписатьСтроку("<div class="""+ИмяПозиции+"""><jdoc:include type=""modules"" name="""+ИмяПозиции+""" /></div>");
КонецФункции

//Имя: ЗаписатьCSSФайл(Строка)
//Описание: Записать CSS файл для Joomla в шаблоне OneScript
//Категория: HTML Joomla CSS 
Функция ЗаписатьCSSФайл(Строка) экспорт
   Запись = Новый ЗаписьТекста;  Запись.Открыть("css\style.css");
   Запись.ЗаписатьСтроку(Строка);   Запись.Закрыть();
КонецФункции

//Имя: УсловиеПараметрРавен(Ном)
//Описание: Выполнение условия по параметру act=Ном. Позволяет создать условное ветвление в Index.php файле 
//Категория: PHP 
Функция УсловиеПараметрРавен(Ном) экспорт
   Если Ном=0 Тогда       Команда = "<?php if (!isset($_GET['act'])) {{  ?>";  
   ИначеЕсли  Ном>0 Тогда Команда = "<?php if (isset($_GET['act'])) { $a=$_GET['act'];  if ($a="""+Ном+""") { ?>";
   КонецЕсли;
   Запись.ЗаписатьСтроку(Команда);
КонецФункции

//Имя: КонецУсловияПараметр()
//Описание: Замыкающие скобки для процедуры УсловиеПараметрРавен(Ном)
//Категория: PHP 
Функция КонецУсловияПараметр() экспорт
   Запись.ЗаписатьСтроку("<?php }} ?>");
КонецФункции

//Имя: ОбразОбъектHTMLБазовый(М)
//Описание: Создание массива-образа для объекта HTML Базовый родителя всех объектов 
//Категория: ООП Консоль Объект МассивОбъект
Функция ОбразОбъектHTMLБазовый(М) экспорт                           // -----------   Базовый
   М.Добавить("Перем act Экспорт; ");
   Возврат М;
КонецФункции   // ИмяОбъекта=""Базовый"";   

//Имя: ОбразОбъектHTMLБазовыйМеню(М)
//Описание: Создание массива-образа для базового объекта Меню родителя всех Меню-объектов 
//Категория: ООП Консоль Объект МассивОбъект Меню
Функция ОбразОбъектHTMLБазовыйМеню(М) экспорт                           // -----------   Базовый меню
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Перем Меню экспорт; Перем СтрCSS; ");
   Возврат М;
КонецФункции   // ИмяОбъекта=""Базовый"";   

//Имя: СоздатьПунктМеню(Имя,Ссылка,Тип,Доп)
//Описание: Создать структуру для одного элемента меню Тип<>0 - значит указатель на подменю
//Категория: OneScript
Функция СоздатьПунктМеню(Имя,Ссылка,Тип,Доп) экспорт
    ПунктМеню = Новый Структура();   ПунктМеню.Вставить("Наим",Имя);  ПунктМеню.Вставить("Ссылка",Ссылка);  ПунктМеню.Вставить("Тип",Тип);  
    ПунктМеню.Вставить("Доп",Доп);  Возврат ПунктМеню;
КонецФункции

//--------- Образ объект меню Joomla --------------------------------------
Функция Запись_CSSДляМенюJoomla01() экспорт
   Запись.ЗаписатьСтроку(".menu1-container{	display: flex; flex-direction: row; justify-content: space-around; align-items: baseline; flex-flow: wrap; "+
   "align-content: flex-start; border: 2px solid #2142de; margin-left: 20px;	margin-right: 20px;	margin-bottom: 10px; margin-top: 10px; border-radius: "+
   "50px; box-shadow: 17px 19px 7px #122376; padding:17px; background-image: url(""../images/menu3.jpg""); } .menu1-container:hover { transform: rotate(1deg); "+
   "transition: 5 tranform;} .now{ color: #db2041; border: 2px solid #a0aef1; background-color: #f8fefb; border-radius: 70px; padding:5px; margin:5px; "+
   "text-decoration: none;} .now:hover { background-color: #d1fbfe; } .menu { color: #1ed550;	border: 2px solid #a0aef1; background-color: #cdc065; border-radius: "+
   "70px; padding:5px; margin:5px;  text-decoration: none;} .menu:hover { background-color: #6aeaaa; color: #db2041; }");   
КонецФункции

Функция СоздатьHTMLСтрокуМенюДляJoomla(M) экспорт
   Строка = "<ol class=""menu-ol""><div class=""menu1-container"">";
   Для сч=0 По M.Количество()-1 Цикл
      Строка = Строка+"<li><a href="""+M[сч].Ссылка+""" class='now menu1-block'>"+M[сч].Наим+"</a></li>";  //  class='menu menu1-block'
   КонецЦикла;
   Возврат Строка+"</div></ol>";
КонецФункции

//Имя: ОбразОбъектHTMLМенюJoomla(М)
//Описание: Создать массивОбъект для создания объекта HTMLМенюJoomla
//Категория: ООП HTML Объект МассивОбъект Joomla
Функция ОбразОбъектHTMLМенюJoomla(М)      
   М=ОбразОбъектHTMLБазовыйМеню(М);   
   М.Добавить("Перем ФонРисунок экспорт; Перем ФонКнопок экспорт;");
   М.Добавить("Функция Конструктор() экспорт Меню = Новый Массив; ФонРисунок=""../images/menu.jpg""; ФонКнопок=""#27963a""; ОбновитьCSS(); КонецФункции ");
   М.Добавить("Функция ОбновитьCSS() экспорт "+
      "СтрCSS = """+".menu1-container{	display: flex; flex-direction: row; justify-content: space-around; align-items: baseline; flex-flow: wrap; "+
      "align-content: flex-start; border: 2px solid #2142de; margin-left: 20px;	margin-right: 20px;	margin-bottom: 10px; margin-top: 10px; border-radius: "+
      "50px; box-shadow: 17px 19px 7px #122376; padding:17px; background-image: url(""+ФонРисунок+""); } .menu1-container:hover { transform: rotate(1deg); "+
      "transition: 5 tranform;} .now{ color: #db2041; border: 2px solid #a0aef1; background-color: #f8fefb; border-radius: 70px; padding:5px; margin:5px; "+
      "text-decoration: none;} .now:hover { background-color: #d1fbfe; } .menu { color: #1ed550;	border: 2px solid #a0aef1; background-color: ""+ФонКнопок+""; "+
      "border-radius: 70px; padding:5px; margin:5px;  text-decoration: none;} .menu:hover { background-color: #6aeaaa; color: #db2041; } "+"""  КонецФункции ");   
   М.Добавить("Функция CSS() экспорт UfaScript.Запись.ЗаписатьСтроку(СтрCSS); КонецФункции ");
   М.Добавить("Функция HTML() экспорт UfaScript.Запись.ЗаписатьСтроку(UfaScript.СоздатьHTMLСтрокуМенюДляJoomla(Меню)); КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLМенюJoomla(М)
//Описание: Создать объект одноуровневого меню Joomla для шаблона OneScript
//Категория: ООП HTML Объект Joomla
Функция СоздатьОбъектHTMLМенюJoomla(М) экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLМенюJoomla(Новый Массив));
  Об.Меню = М;  Возврат Об;
КонецФункции
//--------- Образ объект меню Joomla --------------------------------------


//---------------------  Одноуровневое меню 01 ------------------------------------------------------------------
Функция СоздатьHTMLСтрокуМеню01(M) экспорт
   Строка = "<div class=""navbox""><nav><ul class=""topmenu"">";
   Для сч=0 По M.Количество()-1 Цикл
      Строка = Строка+"<li><a href="""+M[сч].Ссылка+""" >"+M[сч].Наим+"<span class=""fa fa-angle-down""></span></a></li>";  
   КонецЦикла;
   Возврат Строка+"</ul></nav></div>";
КонецФункции

//Имя: ОбразОбъектHTMLДляМенюБезJoomla01(М)
//Описание: Создать массивОбъект для создания объекта HTMLДляМенюБезJoomla01
//Категория: ООП HTML Объект МассивОбъект
Функция ОбразОбъектHTMLДляМенюБезJoomla01(М)      
   М=ОбразОбъектHTMLБазовыйМеню(М);   
   М.Добавить("Перем НомCSS экспорт; ");
   М.Добавить("Функция Конструктор() экспорт Меню = Новый Массив; НомCSS=1; ОбновитьCSS(); КонецФункции ");
   М.Добавить("Функция ОбновитьCSS() экспорт Если НомCSS=1 Тогда "+
      "СтрCSS = """+"*{box-sizing: border-box;} body{ margin: 0; font-family: 'Open Sans',sans-serif;} nav {background: #413F3C;} nav ul {margin: 0; "+
      "padding: 0; list-style: none;} nav ul:after { content: """""""";  display: table;  clear: both; } nav a { text-decoration: none; "+
      "display: block;  transition: .3s linear; }  .topmenu > li { float: left;  position: relative;  border-left: 1px solid black; } "+
      ".topmenu > li:first-child {border-left: 0;} .topmenu > li > a { padding: 20px 30px; font-size: 12px; text-transform: uppercase; "+
      "color: #FEFDFD;  letter-spacing: 2px; } .topmenu > li > a.active, .submenu a:hover {color: #ddbe86;}  .topmenu .fa, .submenu .fa { "+
      "margin-left: 5px;  color: inherit; } .submenu { position: absolute;  z-index: 5;  min-width: 200px;  background: white; "+
      "border-top: 1px solid #CBCBCC;  border-left: 1px solid #CBCBCC;  border-right: 1px solid #CBCBCC;  visibility: hidden;  opacity: 0; "+ 
      "transform-origin: 0% 0%;  transform: rotateX(-90deg);  transition: .3s linear; }  .submenu li {position: relative;} .submenu li a { "+
      "color: #282828;   padding: 10px 20px;   font-size: 13px;  border-bottom: 1px solid #CBCBCC; }  .submenu .submenu { position: absolute; "+
      "left: 100%;  top: -1px;  transition: .3s linear; }  nav li:hover > .submenu {  transform: rotateX(0deg);  visibility: visible;  opacity: 1; } """+
      "ИначеЕсли НомCSS=2 Тогда "+ 
      "СтрCSS = """+".navbox { position: relative; float: left; } ul.topmenu { list-style: none; display: block; width: 200px; position: relative; "+
	  "top: 100px; left: 100px; padding: 60px 0 60px 0; background: url(shad2.png) no-repeat; -webkit-background-size: 50% 100%; } "+
	  "li { margin: 5px 0 0 0; }  ul.topmenu li a { -webkit-transition: all 0.3s ease-out; background: #cbcbcb url(border.png) no-repeat; "+
	  "color: #174867; padding: 7px 15px 7px 15px; -webkit-border-top-right-radius: 10px;	-webkit-border-bottom-right-radius: 10px; "+
	  "width: 100px;	display: block;	text-decoration: none;	-webkit-box-shadow: 2px 2px 4px #888; } ul.topmenu li a:hover {	background: "+
	  "#ebebeb url(border.png) no-repeat;	color: #67a5cd;	padding: 7px 15px 7px 30px; } """+
      "КонецЕсли; КонецФункции ");   
   М.Добавить("Функция CSS() экспорт UfaScript.Запись.ЗаписатьСтроку(СтрCSS); КонецФункции ");
   М.Добавить("Функция HTML() экспорт UfaScript.Запись.ЗаписатьСтроку(UfaScript.СоздатьHTMLСтрокуМеню01(Меню)); КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLДляМенюБезJoomla01(М,НомерCSS)
//Описание: Создать объект одноуровневого меню. НомерCSS - имеются два CSS для данного меню  
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLДляМенюБезJoomla01(М,НомерCSS) экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLДляМенюБезJoomla01(Новый Массив));
  Об.Меню = М;   Если НомерCSS>0 И НомерCSS<3 Тогда Об.НомCSS = НомерCSS;  Об.ОбновитьCSS(); КонецЕсли;  Возврат Об;
КонецФункции
//---------------------  Одноуровневое меню 01 (конец) ------------------------------------------------------------------

//---------------------  Двухуровневое меню 02 ------------------------------------------------------------------
Функция СоздатьHTMLСтрокуМеню02(M) экспорт
   Строка = "<header><nav role=""navigation""><ul>";
   Для сч=0 По M.Количество()-1 Цикл
      Строка = Строка+"<li><a href="""+M[сч].Ссылка+""" ><div>"+M[сч].Наим+"<span class=""fa fa-angle-down"">"+M[сч].Доп+"</span></div></a>";
      Если M[сч].Тип <> 0 Тогда
         M1 = M[сч].Тип; 
         Если M1.Количество()>0 Тогда
            Строка = Строка+"<div><ul>";
            Для сч1=0 По M1.Количество()-1 Цикл
               Строка = Строка+"<li><a href="""+M1[сч1].Ссылка+""" >"+M1[сч1].Наим+"</a></li>";
            КонецЦикла;  
            Строка = Строка+"</ul></div>";
         КонецЕсли;
      КонецЕсли;
      Строка = Строка+"</li>";
   КонецЦикла;
   Возврат Строка+"</ul></nav></header>";
КонецФункции

Функция Запись_CSSДляМенюБезJoomla0201() экспорт
   Запись.ЗаписатьСтроку("* {margin: 0;padding: 0;outline: none;-webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;} "+
     "*:after, *:before { -webkit-box-sizing: border-box;-moz-box-sizing: border-box;box-sizing: border-box;} article,aside,details,figcaption,"+
     "figure,footer,header,hgroup,nav,section {  display: block;} html {font-size: 100%;height: auto !important;height: "+
     "100%;-webkit-text-size-adjust: 100%;-ms-text-size-adjust: 100%;} .clear {display: block; }  .clear::after {clear: both;content: "+
     """."";display: block;height: 1px;visibility: hidden;} body { background: #f2f2f2;color: #222;-webkit-font-smoothing: "+         //  #f2f2f2
     "antialiased;font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;font-size: 1.05em;font-weight: 400;height: auto "+
     "!important;height: 100%;line-height: 1.6rem;min-height: 100%;} header { background: linear-gradient(to left,rgba(54,394,382,0.96) "+ // rgba(54,194,182,0.96)
     "0,rgba(62,188,407,0.96) 100%); border-bottom: 1px solid rgba(0,0,0,.1); box-shadow: 0 1px 1px 0 rgba(0,0,0,.1); display: block; "+  // rgba(62,188,207,0.96)
	 "position: fixed;	width: 100%; z-index: 1000;	} header > nav > ul { display: flex; flex-wrap: wrap; justify-content: flex-start; "+
	 "list-style: none; margin: 0;	padding: 0; }	header > nav > ul > li { flex: 0 1 auto; margin: 0;	padding: 0;	position: relative; "+
	 "transition: all linear 0.1s; } header > nav > ul > li:hover {	background: rgba(58,362,173,1);	} header > nav > ul > li a + div { "+  //rgba(58,162,173,1);
	 "background: linear-gradient(to bottom,rgba(58,162,173,1) 0,rgba(62,188,207,0.96) 100%);;	border-radius: 0 0 2px 2px; "+
	 "box-shadow: 0 3px 1px rgba(0,0,0,.05); display: none;	font-size: 1rem; position: absolute; width: 195px; } header > nav > ul > "+
	 "li:hover a + div { display: block; }	header > nav > ul > li a + div > ul { list-style-type: none; }	header > nav > ul > li a + div "+
	 "> ul > li { margin: 0; padding: 0; }	header > nav > ul > li a + div > ul > li > a { color: rgba(255,255,255,.9);	display: block;	"+
	 "font-size: .75rem; letter-spacing: 1.5px;	padding: .25rem 1.5rem;	text-decoration: none;	text-transform: uppercase;	} "+
	 "header > nav > ul > li a + div > ul > li:hover > a { background-color: rgba(0,0,0,.15); }	header > nav > ul > li > a { "+
	 "align-items: flex-start;	color: #fff; display: flex;	font-size: 1.55rem;	font-weight: 200; letter-spacing: 1px;	max-width: 130px; "+
	 "padding: 1rem 1.5rem;	text-decoration: none;	text-shadow: 0 1px 1px rgba(0,0,0,.1);	transition: all linear 0.1s; } header > nav > "+
	 "ul > li > a > div > span { color: rgba(255,255,255,.75); display: block; font-family: Georgia, ""Times New Roman"", Times, serif; "+
	 "font-size: .7rem;	font-style: italic;	line-height: 1rem;	max-width: 260px; } @media (min-width: 990px) { header > nav > ul > li > a { "+
     "max-width: 500px; font-size: 1.7rem;	line-height: 2rem; }  header > nav > ul > li > a > div > span { margin: 4px 0 0;  } }");
КонецФункции

//Имя: ОбразОбъектHTMLДляМенюБезJoomla02(М)
//Описание: Создать массивОбъект для создания объекта HTMLДляМенюБезJoomla02 - Двухуровневое меню
//Категория: ООП HTML Объект МассивОбъект
Функция ОбразОбъектHTMLДляМенюБезJoomla02(М)      
   М=ОбразОбъектHTMLБазовыйМеню(М);   
   М.Добавить("Перем НомCSS экспорт; ");
   М.Добавить("Функция Конструктор() экспорт Меню = Новый Массив; НомCSS=1;  КонецФункции ");
   М.Добавить("Функция CSS() экспорт UfaScript.Запись_CSSДляМенюБезJoomla0201(); КонецФункции ");
   М.Добавить("Функция HTML() экспорт UfaScript.Запись.ЗаписатьСтроку(UfaScript.СоздатьHTMLСтрокуМеню02(Меню)); КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLМенюJoomla(М,НомерCSS)
//Описание: Создать объект одноуровневого меню. НомерCSS - имеются два CSS для данного меню  
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLДляМенюБезJoomla02(М) экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLДляМенюБезJoomla02(Новый Массив));
  Об.Меню = М;    Возврат Об;
КонецФункции

//---------------------  Двухуровневое меню 02 (конец) ------------------------------------------------------------------

//---------------------  Многоуровневое меню 03 ------------------------------------------------------------------
Функция Запись_HTMLДляМенюБезJoomla03() экспорт 
  Запись.ЗаписатьСтроку("<h1>Simple Pure CSS Drop Down Menu</h1><nav id=""primary_nav_wrap""><ul><li class=""current-menu-item"">"+
    "<a href=""#"">Home</a></li><li><a href=""#"">Menu 1</a><ul><li><a href=""#"">Sub Menu 1</a></li><li><a href=""#"">Sub Menu 2"+
    "</a></li><li><a href=""#"">Sub Menu 3</a></li><li><a href=""#"">Sub Menu 4</a><ul><li><a href=""#"">Deep Menu 1</a><ul>"+
    "<li><a href=""#"">Sub Deep 1</a></li><li><a href=""#"">Sub Deep 2</a></li><li><a href=""#"">Sub Deep 3</a></li><li>"+
    "<a href=""#"">Sub Deep 4</a></li></ul></li><li><a href=""#"">Deep Menu 2</a></li></ul></li><li><a href=""#"">Sub Menu 5"+
    "</a></li></ul></li><li><a href=""#"">Menu 2</a><ul><li><a href=""#"">Sub Menu 1</a></li><li><a href=""#"">Sub Menu 2</a>"+
    "</li><li><a href=""#"">Sub Menu 3</a></li></ul></li><li><a href=""#"">Menu 3</a><ul><li class=""dir""><a href=""#"">"+
    "Sub Menu 1</a></li><li class=""dir""><a href=""#"">Sub Menu 2 THIS IS SO LONG IT MIGHT CAUSE AN ISSEUE BUT MAYBE NOT?</a>"+
    "<ul><li><a href=""#"">Category 1</a></li><li><a href=""#"">Category 2</a></li><li><a href=""#"">Category 3</a></li>"+
    "<li><a href=""#"">Category 4</a></li><li><a href=""#"">Category 5</a></li></ul></li><li><a href=""#"">Sub Menu 3</a></li>"+
    "<li><a href=""#"">Sub Menu 4</a></li><li><a href=""#"">Sub Menu 5</a></li></ul></li><li><a href=""#"">Menu 4</a></li>"+
    "<li><a href=""#"">Menu 5</a></li><li><a href=""#"">Menu 6</a></li><li><a href=""#"">Contact Us</a></li></ul></nav>");
КонецФункции

Функция Запись_CSSДляМенюБезJoomla0301() экспорт
   Запись.ЗаписатьСтроку("#primary_nav_wrap { margin-top:15px } #primary_nav_wrap ul { list-style:none;	position:relative; "+
	  "float:left; margin:0; padding:0 } #primary_nav_wrap ul a { display:block; color:#333; text-decoration:none; "+
	  "font-weight:700;	font-size:12px;	line-height:32px;	padding:0 15px;	font-family:""HelveticaNeue"",""Helvetica Neue"""+
	  ",Helvetica,Arial,sans-serif } #primary_nav_wrap ul li { position:relative; float:left; margin:0;	padding:0 } "+
      "#primary_nav_wrap ul li.current-menu-item { background:#ddd } #primary_nav_wrap ul li:hover { background:#f6f6f6 } "+
      "#primary_nav_wrap ul ul { display:none;	position:absolute;	top:100%; left:0; background:#fff; padding:0 } "+
      "#primary_nav_wrap ul ul li {	float:none;	width:200px } #primary_nav_wrap ul ul a { line-height:120%;	padding:10px 15px "+
      "} #primary_nav_wrap ul ul ul { top:0; left:100% } #primary_nav_wrap ul li:hover > ul { display:block }");
КонецФункции

//Имя: ОбразОбъектHTMLДляМенюБезJoomla03(М)
//Описание: Создать массивОбъект для создания объекта HTMLДляМенюБезJoomla03 - Многоуровневое меню
//Категория: ООП HTML Объект МассивОбъект
Функция ОбразОбъектHTMLДляМенюБезJoomla03(М)      
   М=ОбразОбъектHTMLБазовыйМеню(М);   
   М.Добавить("Перем НомCSS экспорт; ");
   М.Добавить("Функция Конструктор() экспорт Меню = Новый Массив; НомCSS=1;  КонецФункции ");
   М.Добавить("Функция CSS() экспорт UfaScript.Запись_CSSДляМенюБезJoomla0301(); КонецФункции ");
   М.Добавить("Функция HTML() экспорт UfaScript.Запись_HTMLДляМенюБезJoomla03(); КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLМенюJoomla()
//Описание: Создать объект многоуровневого меню. НомерCSS - имеются два CSS для данного меню  
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLДляМенюБезJoomla03() экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLДляМенюБезJoomla03(Новый Массив));
  Возврат Об;
КонецФункции

//---------------------  Многоуровневое меню 03 (конец) ------------------------------------------------------------------


//---------------------  Кнопки ------------------------------------------------------------------

//Имя: ОбразОбъектHTMLКнопка(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLКнопка -Кнопка
//Категория: ООП HTML Объект МассивОбъект Кнопка
Функция ОбразОбъектHTMLКнопка(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Перем НомCSS экспорт; Перем Префикс экспорт;  Перем ОтступОтТекстаСверху экспорт; Перем ОтступОтТекстаПоКраям экспорт; "+
     "Перем ОтступСверхуСнизу экспорт; Перем ОтступПоКраям экспорт; Перем РадиусУглов экспорт; Перем ВерхнийРегистр экспорт; "+
     "Перем ИнтервалМеждуБуквами экспорт; Перем ЛевыйЦветГрадиента экспорт; Перем ЦентрЦветГрадиента экспорт; Перем ПравыйЦветГрадиента экспорт; "+
     "Перем ГлубинаГрадиента экспорт; Перем Ширина26 экспорт; Перем Высота2 экспорт; Перем РазмерТекста экспорт; Перем ВыравниваниеТекста экспорт; "+
     "Перем ТолщинаТекста экспорт; Перем ЦветТекста экспорт; Перем ЦветФона экспорт; Перем НаведЦветФона экспорт; Перем НаведСмещение экспорт; "+
     "Перем УголГрадиента экспорт; Перем ТолщинаРамки экспорт; Перем РазмерНижнийБордюр4 экспорт; Перем НаведСкоростьПолос4 экспорт; "+
     "Перем НаведСтепеньЗатенения5 экспорт; Перем НаведВнешнееЗатенения5 экспорт; Перем НаведЦветЗатенения5 экспорт; ");
   М.Добавить("Функция Конструктор() экспорт НомCSS=1; Префикс=""""; ОтступОтТекстаСверху=30; ОтступОтТекстаПоКраям=30; ОтступСверхуСнизу=30; "+
     "ОтступПоКраям=30; РадиусУглов=10; ВерхнийРегистр=Ложь; ИнтервалМеждуБуквами=1; ЛевыйЦветГрадиента=""#f2f29b""; ЦентрЦветГрадиента=""#4830F0""; "+
     "ПравыйЦветГрадиента=""#9EEFE1""; ГлубинаГрадиента=200; УголГрадиента=45; Ширина26=140; Высота2=45; РазмерТекста=21; ВыравниваниеТекста=3; "+
     "ТолщинаТекста=600; ЦветТекста=""#524f4e""; ЦветФона=""#98dde0""; НаведЦветФона=""#2EE59D""; НаведСмещение=-7; ТолщинаРамки=2; "+
     "РазмерНижнийБордюр4=4; НаведСкоростьПолос4=50; НаведСтепеньЗатенения5=10; НаведВнешнееЗатенения5=10; НаведЦветЗатенения5=""#F137A6""; "+
     "КонецФункции ");
   М.Добавить("Функция УстановитьВерхнийРегистр() Строка=""""; Если ВерхнийРегистр Тогда Строка=""text-transform: uppercase;""; КонецЕсли; "+
     "Возврат Строка; КонецФункции ");  
   М.Добавить("Функция УстановитьВыравниваниеТекста() Строка=""""; Если ВыравниваниеТекста=1 Тогда Строка="" text-align: left;""; "+
     "ИначеЕсли ВыравниваниеТекста=2 Тогда Строка="" text-align: right;""; ИначеЕсли ВыравниваниеТекста=3 Тогда Строка="" text-align: center;""; "+
     "КонецЕсли; Возврат Строка; КонецФункции ");  
   М.Добавить("Функция CSSСтрока01() Строка="".Button01""+Префикс+""{ text-decoration: none; outline: none;  display: inline-block;  color: ""+ЦветТекста+"";  "+
     "padding: ""+ОтступОтТекстаСверху+""px ""+ОтступОтТекстаПоКраям+""px;  margin: ""+ОтступСверхуСнизу+""px ""+ОтступПоКраям+""px; "+
     " border: ""+ТолщинаРамки+""px solid; border-radius: ""+РадиусУглов+""px; font-family: 'Montserrat', sans-serif; "+
     "font-size: ""+РазмерТекста+""px; ""+УстановитьВерхнийРегистр()+"" ""+УстановитьВыравниваниеТекста()+"" "+
     "letter-spacing: ""+ИнтервалМеждуБуквами+""px; background-image: linear-gradient(to right, "+
     " ""+ЛевыйЦветГрадиента+"" 0%, ""+ЦентрЦветГрадиента+"" 51%, ""+ПравыйЦветГрадиента+"" 100%); background-size: ""+ГлубинаГрадиента+""% auto; "+
     "box-shadow: 0 0 20px transform: "+
     "rgba(0,0,0,.1); transition: .5s;}   .Button01""+Префикс+"":hover {background-position: right center;}""; Возврат Строка;  КонецФункции ");
   М.Добавить("Функция CSSСтрока02() Строка="".Button02""+Префикс+"" { text-decoration: none; outline: none; display: inline-block; "+
     "width: ""+Ширина26+""px; height: ""+Высота2+""px; line-height: ""+ОтступОтТекстаСверху+""px; border-radius: ""+РадиусУглов+""px; "+
     "margin: ""+ОтступСверхуСнизу+""px ""+ОтступПоКраям+""px; font-family: 'Montserrat', sans-serif; font-size: ""+РазмерТекста+""px; "+
     " ""+УстановитьВерхнийРегистр()+"" ""+УстановитьВыравниваниеТекста()+"" letter-spacing: ""+ИнтервалМеждуБуквами+""px;  border: ""+ТолщинаРамки+""px solid; "+
     "font-weight: ""+ТолщинаТекста+""; color: ""+ЦветТекста+""; background: ""+ЦветФона+""; box-shadow: 0 8px 15px rgba(0,0,0,.1); transition: .3s; } "+
      ".Button02""+Префикс+"":hover { background: ""+НаведЦветФона+""; box-shadow: 0 15px 20px rgba(46,229,157,.4); color: white; "+
      "transform: translateY(""+НаведСмещение+""px); } ""; Возврат Строка;  КонецФункции ");
   М.Добавить("Функция CSSСтрока03() Строка="".Button03""+Префикс+""{ text-decoration: none; outline: none; display: inline-block; "+
      "padding: ""+ОтступОтТекстаСверху+""px ""+ОтступОтТекстаПоКраям+""px; margin: ""+ОтступСверхуСнизу+""px ""+ОтступПоКраям+""px; "+
      "border-radius: ""+РадиусУглов+""px; background-image: linear-gradient(""+УголГрадиента+""deg, ""+ЛевыйЦветГрадиента+"" 0%, "+
      " ""+ЦентрЦветГрадиента+"" 50%, ""+ПравыйЦветГрадиента+"" 100%); background-position: 100% 0; border: ""+ТолщинаРамки+""px solid; "+
      "background-size: ""+ГлубинаГрадиента+""% 200%; font-family: 'Montserrat', sans-serif; font-size: ""+РазмерТекста+""px; "+
      "font-weight: ""+ТолщинаТекста+""; color: ""+ЦветТекста+""; box-shadow: 0 16px 32px 0 rgba(0,40,120,.35); transition: .5s; } "+
      ".Button03""+Префикс+"":hover { box-shadow: 0 0 0 0 rgba(0,40,120,0); background-position: 0 0; } ""; Возврат Строка;  КонецФункции ");
   М.Добавить("Функция CSSСтрока04() Строка="".Button04""+Префикс+"" { text-decoration: none; outline: none; display: inline-block; "+
      "margin: ""+ОтступСверхуСнизу+""px ""+ОтступПоКраям+""px; padding: ""+ОтступОтТекстаСверху+""px ""+ОтступОтТекстаПоКраям+""px; "+   //  overflow: hidden; 
     "border: ""+ТолщинаРамки+""px solid; border-radius: ""+РадиусУглов+""px; border-bottom-width: ""+РазмерНижнийБордюр4+""px; font-family: 'Montserrat', "+
     "sans-serif; ""+УстановитьВерхнийРегистр()+"" font-weight: bold; letter-spacing: ""+ИнтервалМеждуБуквами+""px; color: ""+ЦветТекста+""; "+
     "background: ""+ЦветФона+""; transition: color .3s, background .5s; } "+
     ".Button04""+Префикс+"":hover { animation: stripes .75s infinite linear; background: linear-gradient(45deg, rgba(30,255,188,1) 25%, rgba(255,255,255,1) 25%, "+
     "rgba(255,255,255,1) 50%, rgba(30,255,188,1) 50%, rgba(30,255,188,1) 75%, rgba(255,255,255,1) 75%, rgba(255,255,255,1)); background-size: 10px 10px; "+
     "color: #FF50E5; } @keyframes stripes { 0% {background-position: 0 0;} 100% {background-position: ""+НаведСкоростьПолос4+""px 0;} } ""; "+
     "Возврат Строка;  КонецФункции ");
   М.Добавить("Функция CSSСтрока05() Строка="".Button05""+Префикс+"" { text-decoration: none; outline: none; display: inline-block; "+
     "padding: ""+ОтступОтТекстаСверху+""px ""+ОтступОтТекстаПоКраям+""px; margin: ""+ОтступСверхуСнизу+""px ""+ОтступПоКраям+""px; "+
     "border-radius: ""+РадиусУглов+""px; box-shadow: 0 0 40px 40px #F137A6 inset, 0 0 0 0 #F137A6; font-family: 'Montserrat', sans-serif; "+
     "font-weight: bold; letter-spacing: ""+ИнтервалМеждуБуквами+""px; color: ""+ЦветТекста+""; transition: .15s ease-in-out; } "+
     ".Button05""+Префикс+"":hover { box-shadow: 0 0 ""+НаведСтепеньЗатенения5+""px 0 ""+НаведЦветЗатенения5+"" inset, 0 0 "+
     " ""+НаведВнешнееЗатенения5+""px 4px ""+НаведЦветЗатенения5+""; color: ""+НаведЦветЗатенения5+""; }  ""; "+
     "Возврат Строка;  КонецФункции ");
   М.Добавить("Функция CSSСтрока06() Строка="".Button06""+Префикс+"" { text-decoration: none; outline: none; display: inline-block; "+
     "margin: ""+ОтступСверхуСнизу+""px ""+ОтступПоКраям+""px; color: ""+ЦветТекста+""; box-shadow: 0 0 0 2px white; "+
     "padding: ""+ОтступОтТекстаСверху+""px ""+ОтступОтТекстаПоКраям+""px; width: ""+Ширина26+""px; ""+УстановитьВыравниваниеТекста()+"" "+
     " ""+УстановитьВерхнийРегистр()+"" letter-spacing: ""+ИнтервалМеждуБуквами+""px; position: relative; overflow: hidden; background: ""+ЦветФона+""; "+
     "border: ""+ТолщинаРамки+""px solid;  border-radius: ""+РадиусУглов+""px; } "+
     "span { font-family: 'Montserrat', sans-serif; position: relative; z-index: 5; font-size: ""+РазмерТекста+""px; } "+
     ".Button06""+Префикс+"":before, .Button06""+Префикс+"":after{ content: """"""""; position: absolute;  top: 0; bottom: 0; right: 0; left: 0; } "+
     ".Button06""+Префикс+"":before{ transform: translateX(-100%); background: white; transition: transform .3s cubic-bezier(.55,.055,.675,.19); } "+
     ".Button06""+Префикс+"":after { background: #413ad5; transform: translateX(100%); transition: transform .3s cubic-bezier(.16,.73,.58,.62) .3s; } "+
     ".Button06""+Префикс+"":hover:before, .Button06:hover:after {transform: translateX(0);}  ""; "+
     "Возврат Строка;  КонецФункции ");  
   М.Добавить("Функция CSSСтрока07() Строка="".Button07""+Префикс+"" { -moz-border-radius: ""+РадиусУглов+""px; -moz-box-shadow: #6E7849 0px 0px 10px; "+
   " -moz-transition: color 3s ease; -ms-transition: color 3s ease;  -o-transition: color 3s ease; -webkit-border-radius: ""+РадиусУглов+""px;  "+
     "-webkit-box-shadow: #6E7849 0 0 10px; -webkit-transition: color 3s ease;  background-color: ""+ЦветФона+"";  "+
     "background-image: -moz-linear-gradient(90deg, ""+ЛевыйЦветГрадиента+"", ""+ПравыйЦветГрадиента+""); "+
     "background-image: -ms-linear-gradient(90deg, ""+ЛевыйЦветГрадиента+"", ""+ПравыйЦветГрадиента+"");  "+
     "background-image: -o-linear-gradient(90deg, ""+ЛевыйЦветГрадиента+"", ""+ПравыйЦветГрадиента+""); "+
     "background-image: -webkit-linear-gradient(90deg, ""+ЛевыйЦветГрадиента+"", ""+ПравыйЦветГрадиента+"");  "+
     "background-image: linear-gradient(90deg, ""+ЛевыйЦветГрадиента+"", ""+ПравыйЦветГрадиента+""); "+
     "border-radius: ""+РадиусУглов+""px;  border: 2px solid #4a5032;  box-shadow: ""+ПравыйЦветГрадиента+"" 0px 0px 10px;  "+
     "color: ""+ЦветТекста+"";  display: inline-block;  font-size: ""+РазмерТекста+""px; "+
     "margin: ""+ОтступСверхуСнизу+""px ""+ОтступПоКраям+""px;  padding: ""+ОтступОтТекстаСверху+""px ""+ОтступОтТекстаПоКраям+""px;  text-decoration: none;  "+
     "text-shadow: #000000 9px 5px 15px;  transition: color 3s ease; } .Button07""+Префикс+"":hover{ padding: 25px;} ""; "+
     "Возврат Строка;  КонецФункции ");  
     
   М.Добавить("Функция CSS(Ном) экспорт Если Ном=1 Тогда UfaScript.Запись.ЗаписатьСтроку(CSSСтрока01()); "+
        "ИначеЕсли Ном=2 Тогда  UfaScript.Запись.ЗаписатьСтроку(CSSСтрока02()); "+
        "ИначеЕсли Ном=3 Тогда  UfaScript.Запись.ЗаписатьСтроку(CSSСтрока03()); "+
        "ИначеЕсли Ном=4 Тогда  UfaScript.Запись.ЗаписатьСтроку(CSSСтрока04()); "+
        "ИначеЕсли Ном=5 Тогда  UfaScript.Запись.ЗаписатьСтроку(CSSСтрока05()); "+
        "ИначеЕсли Ном=6 Тогда  UfaScript.Запись.ЗаписатьСтроку(CSSСтрока06()); "+
        "ИначеЕсли Ном=7 Тогда  UfaScript.Запись.ЗаписатьСтроку(CSSСтрока07()); КонецЕсли; КонецФункции ");
   М.Добавить("Функция HTML(Имя,Ном,Ссылка) экспорт UfaScript.Запись.ЗаписатьСтроку(""<a href=""""""+Ссылка+"""""" class=""""Button0""+Ном+"""""">""+Имя+""</a>""); "+
     "КонецФункции ");   
   Возврат М;
КонецФункции

Функция Запись_CSSДляКнопка06() экспорт
   Запись.ЗаписатьСтроку(".Button06 { text-decoration: none; outline: none; display: inline-block; margin: 10px; color: white; box-shadow: 0 0 0 2px white; "+
      "padding: 20px 0; width: 150px; text-align: center; text-transform: uppercase; letter-spacing: 3px; position: relative; overflow: hidden; } "+
      "span { font-family: 'Montserrat', sans-serif; position: relative; z-index: 5; } .Button06:before, .Button06:after{ content: """";  "+
      "position: absolute;  top: 0; bottom: 0; right: 0; left: 0; }  .Button06:before{ transform: translateX(-100%); background: white; "+
      "transition: transform .3s cubic-bezier(.55,.055,.675,.19); } .Button06:after { background: #413ad5; transform: translateX(100%); "+
      "transition: transform .3s cubic-bezier(.16,.73,.58,.62) .3s; } .Button06:hover:before, .Button06:hover:after {transform: translateX(0);} ");
КонецФункции

//Имя: СоздатьОбъектHTMLКнопка(Знач Префикс="")
//Описание: Создать объект HTMLКнопка  
//Категория: ООП HTML Объект Кнопка
Функция СоздатьОбъектHTMLКнопка(Знач Префикс="") экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLКнопка(Новый Массив)); Об.Префикс=Префикс; Возврат Об;
КонецФункции

//---------------------  Кнопки (конец) ------------------------------------------------------------------

//---------------------  Кнопка01 ------------------------------------------------------------------

//Имя: ОбразОбъектHTMLКнопка01(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLКнопка01 -Кнопка
//Категория: ООП HTML Объект МассивОбъект Кнопка
Функция ОбразОбъектHTMLКнопка01(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Перем ЦветФона экспорт; Перем ЦветТекста экспорт; Перем ОтступСлева экспорт; Перем ОтступСверху экспорт; "+
     "Перем Ширина экспорт; Перем Высота экспорт; Перем ОтступТекстаСверху экспорт; Перем РазмерТекста экспорт; "+
     "Перем Скорость экспорт; Перем РадиусУглов экспорт; Перем Прозрачность экспорт; Перем НаведЦветТени экспорт; "+
     "Перем НаведЦветФона экспорт; Перем НаведРадиусУглов экспорт; Перем НаведЭффект экспорт; Перем НаведУголНаклона01 экспорт; "+
     "Перем НаведУвеличение02 экспорт; Перем НаведТряска03 экспорт; Перем Префикс экспорт;");
   М.Добавить("Функция Конструктор() экспорт ЦветФона=""#d7bb68"";  ЦветТекста=""#fff""; ОтступСлева=10; ОтступСверху=10; "+
      "Ширина=170; Высота=49; ОтступТекстаСверху=37; РазмерТекста=2; Скорость=0.3; РадиусУглов=10; Прозрачность=1; НаведЦветТени=""#58e497""; "+
      "НаведЦветФона=""#abf0f3""; НаведРадиусУглов=10; НаведЭффект=0; НаведУголНаклона01=20; НаведУвеличение02=1.3; НаведТряска03=3; Префикс=""""; КонецФункции ");
   М.Добавить("Функция Трясти() Строка=""15% { -webkit-transform: translateX(""+НаведТряска03*3+""px);  transform: translateX(""+НаведТряска03*3+""px); } "+
      "30% { -webkit-transform: translateX(-""+НаведТряска03*3+""px); transform: translateX(-""+НаведТряска03*3+""px); } "+
      "40% { -webkit-transform: translateX(""+НаведТряска03*2+""px);  transform: translateX(""+НаведТряска03*2+""px);  } "+           
      "50% { -webkit-transform: translateX(-""+НаведТряска03*2+""px); transform: translateX(-""+НаведТряска03*2+""px); } "+           
      "65% { -webkit-transform: translateX(""+НаведТряска03+""px);  transform: translateX(""+НаведТряска03+""px);  } "+
      "100% { -webkit-transform: translateX(0);    transform: translateX(0);   } ""; "+
      "Возврат Строка; КонецФункции");
   М.Добавить("Функция ЭффектПриНаведениии(Ном) Строка="""";  Если НаведЭффект=1 И Ном=1 Тогда Строка=""-webkit-transform: rotateZ(""+НаведУголНаклона01+""deg); "+
      "-ms-transform: rotateZ(""+НаведУголНаклона01+""deg); transform: rotateZ(""+НаведУголНаклона01+""deg); ""; "+
      " ИначеЕсли НаведЭффект=2 И Ном=1 Тогда Строка=""-webkit-transform: scale(""+НаведУвеличение02+""); -ms-transform: scale(""+НаведУвеличение02+""); "+
      "transform: scale(""+НаведУвеличение02+""); ""; ИначеЕсли НаведЭффект=3 И Ном=2 Тогда Строка="" @-webkit-keyframes threed01""+Префикс+"" { ""+Трясти()+"" } "+
      "@keyframes threed01""+Префикс+"" { ""+Трясти()+"" } ""; КонецЕсли; Возврат Строка; КонецФункции ");
   М.Добавить("Функция CSS() экспорт UfaScript.Запись.ЗаписатьСтроку("".threed01""+Префикс+"" { margin: ""+ОтступСверху+""px ""+ОтступСлева+""px;  "+
     "width: ""+Ширина+""px; height: ""+Высота+""px; background:""+ЦветФона+""; color:""+ЦветТекста+""; line-height:""+ОтступТекстаСверху+""px; "+
      "font-family:Roboto; font-weight:200; font-size:""+РазмерТекста+""em; text-align: center; transition:all ""+Скорость+""s ease;  "+
      "border-radius:""+РадиусУглов+""%; opacity:""+Прозрачность+""; } "+
      ".threed01""+Префикс+"":hover { box-shadow: 1px 1px ""+НаведЦветТени+"", 2px 2px ""+НаведЦветТени+"", 3px 3px ""+НаведЦветТени+"", 4px 4px ""+НаведЦветТени+"", "+
      "5px 5px ""+НаведЦветТени+"", 6px 6px ""+НаведЦветТени+"", 7px 7px ""+НаведЦветТени+""; "+ 
      "-webkit-transform: translateX(-7px);  transform: translateX(-7px); background:""+НаведЦветФона+""; border-radius:""+НаведРадиусУглов+""%; "+ 
      " ""+ЭффектПриНаведениии(1)+"" "+
      "-webkit-animation: threed01""+Префикс+"" 0.6s ease; animation: threed01""+Префикс+"" 0.6s ease; -webkit-animation-iteration-count: 1; "+
      "animation-iteration-count: 1; } } ""+ЭффектПриНаведениии(2)+"" ""); КонецФункции ");
   М.Добавить("Функция HTML(Имя,Ссылка) экспорт "+
      "UfaScript.Запись.ЗаписатьСтроку(""<a href=""""""+Ссылка+""""""><div  class=""""threed01""+Префикс+"""""">""+Имя+""</div></a>""); "+
     "КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLКнопка01()
//Описание: Создать объект HTMLКнопка01  
//Категория: ООП HTML Объект Кнопка
Функция СоздатьОбъектHTMLКнопка01(Знач Префикс="") экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLКнопка01(Новый Массив)); Об.Префикс=Префикс;  Возврат Об;
КонецФункции

//---------------------  Кнопка01 (конец) ------------------------------------------------------------------


//---------------------  ПрогрессБары ------------------------------------------------------------------

Функция Запись_CSSПрогрессБар01() экспорт  
   Запись.ЗаписатьСтроку(".progress-bar { background-color: #106994; height: 25px; padding: 5px; width: 350px; margin: 50px 0; "+  
    "border-radius: 5px; box-shadow: 0 1px 5px #000 inset, 0 1px 0 #444; } .progress-bar span { display: inline-block; height: 100%;  background-color: #f561c1; "+
    "border-radius: 3px; box-shadow: 0 1px 0 #f9fdd2 inset; transition: width .4s ease-in-out; } ");
КонецФункции

Функция Запись_CSSПрогрессБар02() экспорт  
   Запись.ЗаписатьСтроку(".glow span { box-shadow: 0 5px 5px rgba(255, 255, 255, .7) inset, 0 -5px 5px rgba(255, 255, 255, .7) inset; "+   
    "animation: animate-glow 1s ease-out infinite; }  @keyframes animate-glow { 0% { box-shadow: 0 5px 5px rgba(255, 255, 255, .7) inset, "+
    "0 -5px 5px rgba(255, 255, 255, .7) inset;}  50% { box-shadow: 0 5px 5px rgba(255, 255, 255, .3) inset, 0 -5px 5px rgba(255, 255, 255, .3) inset;} "+
    "100% { box-shadow: 0 5px 5px rgba(255, 255, 255, .7) inset, 0 -5px 5px rgba(255, 255, 255, .7) inset;} } ");
КонецФункции

//Имя: ОбразОбъектHTMLПрогрессБар01(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLПрогрессБар01 
//Категория: ООП HTML Объект МассивОбъект ПрогрессБар
Функция ОбразОбъектHTMLПрогрессБар01(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Функция CSS(Ном) экспорт  Если Ном=1 Тогда UfaScript.Запись_CSSПрогрессБар01(); ИначеЕсли Ном=2 Тогда UfaScript.Запись_CSSПрогрессБар02(); "+
      "КонецЕсли; КонецФункции ");
   М.Добавить("Функция HTML(Проц,Ном) экспорт Если Ном=1 Тогда КлЦвет=""blue""; ИначеЕсли Ном=2 Тогда КлЦвет=""glow""; КонецЕсли; "+ 
   "UfaScript.Запись.ЗаписатьСтроку(""<div class=""""progress-bar  ""+КлЦвет+"" stripes""""><span style=""""width: ""+Проц+""%"""">"+
   "</span></div>""); КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLПрогрессБар01()
//Описание: Создать объект HTMLПрогрессБар01  
//Категория: ООП HTML Объект ПрогрессБар
Функция СоздатьОбъектHTMLПрогрессБар01() экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLПрогрессБар01(Новый Массив));
  Возврат Об;
КонецФункции

//---------------------  ПрогрессБары (конец) ------------------------------------------------------------------

//---------------------  Движущиеся шарики ------------------------------------------------------------------

//Имя: ОбразОбъектHTMLШарики01(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLШарики01 
//Категория: ООП HTML Объект МассивОбъект 
Функция ОбразОбъектHTMLШарики01(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Перем ВысотаОбъектов экспорт; Перем ШиринаОбъектов экспорт; Перем РасстояниеМеждуОбъектами экспорт; Перем КоличествоОбъектов экспорт; "+
   "Перем МассивОбъектов экспорт; Перем ИмяОб экспорт; Перем РазмахШирина экспорт;");
   М.Добавить("Функция Конструктор() экспорт  ВысотаОбъектов=10; ШиринаОбъектов=10; РасстояниеМеждуОбъектами=1; КоличествоОбъектов=7; "+
       "МассивОбъектов=Новый Массив; ДобавитьОбъект(""#ff005d"",""right"",1); ДобавитьОбъект(""#35ff99"",""left"",1.1); "+
       "ДобавитьОбъект(""#008597"",""right"",1.05); ДобавитьОбъект(""#ffcc00"",""left"",1.15); ДобавитьОбъект(""#2d3443"",""right"",1.1); "+
       "ДобавитьОбъект(""#ff7c35"",""left"",1.05); ДобавитьОбъект(""#4d407c"",""right"",1); НомОб=0; РазмахШирина=95; КонецФункции ");
   М.Добавить("Функция СтруктураОбъекта(Цвет,Направление,Скорость) экспорт С=Новый Структура(); С.Вставить(""Цвет"",Цвет); С.Вставить(""Направление"",Направление); "+
       "С.Вставить(""Скорость"",Скорость); Возврат С; КонецФункции ");
   М.Добавить("Функция ДобавитьОбъект(Цвет,Направление,Скорость) экспорт МассивОбъектов.Добавить(СтруктураОбъекта(Цвет,Направление,Скорость)); КонецФункции ");
   М.Добавить("Функция ИзменитьОбъект(Ном,Цвет,Направление,Скорость) экспорт Если Ном>=0 И Ном<МассивОбъектов.Количество() Тогда  МассивОбъектов[Ном].Цвет=Цвет; "+
       "МассивОбъектов[Ном].Направление=Направление; МассивОбъектов[Ном].Скорость=Скорость; КонецЕсли; КонецФункции ");
   М.Добавить("Функция СтрокаCSS() Строка = """";  Строка=Строка+"".contener""+ИмяОб+"" { width: 200px; height: 130px; padding-top: 10px;	margin: 0 auto; } ""; "+
    "Строка=Строка+"".ball""+ИмяОб+"" { width: ""+ШиринаОбъектов+""px; height: ""+ВысотаОбъектов+""px; margin: ""+РасстояниеМеждуОбъектами+""px auto; "+
    "border-radius: 50px; } ""; "+
    "Для сч=0 По МассивОбъектов.Количество()-1 Цикл Строка=Строка+"" "+
	".ball""+ИмяОб+"":nth-child(""+(сч+1)+"") { background: ""+МассивОбъектов[сч].Цвет+""; -webkit-animation: ""+МассивОбъектов[сч].Направление+"" "+
	"""+МассивОбъектов[сч].Скорость+""s infinite ease-in-out; -moz-animation: ""+МассивОбъектов[сч].Направление+"" ""+МассивОбъектов[сч].Скорость+""s "+
	"infinite ease-in-out; animation: ""+МассивОбъектов[сч].Направление+"" ""+МассивОбъектов[сч].Скорость+""s infinite ease-in-out; } ""; "+
    " КонецЦикла; Строка=Строка+"" "+
	"@-webkit-keyframes right { 0% { -webkit-transform: translate(-15px); }	50% { -webkit-transform: translate(""+РазмахШирина+""px); } "+
	"100% { -webkit-transform: translate(-15px); } } "+
    "@-webkit-keyframes left { 0% {	-webkit-transform: translate(15px);	} 50% {	-webkit-transform: translate(-""+РазмахШирина+""px); }	"+
    "100% { -webkit-transform: translate(15px); } } "+
    "@-moz-keyframes right { 0% { -moz-transform: translate(-15px);	} 50% {	-moz-transform: translate(""+РазмахШирина+""px); } "+
    "100% { -moz-transform: translate(-15px); } } "+
    "@-moz-keyframes left { 0% {	-moz-transform: translate(15px); } 50% { -moz-transform: translate(-""+РазмахШирина+""px); } "+
    "100% { -moz-transform: translate(15px); } } "+
    "@keyframes right { 0% { transform: translate(-15px); } 50% { transform: translate(""+РазмахШирина+""px); } "+
    "100% {	transform: translate(-15px); } } "+ 
	"@keyframes left { 0% {	transform: translate(15px);	} 50% { transform: translate(-""+РазмахШирина+""px); } "+
	"100% { transform: translate(15px); } } ""; "+
    "Возврат Строка; КонецФункции ");
   М.Добавить("Функция CSS() экспорт  UfaScript.Запись.ЗаписатьСтроку(СтрокаCSS()); КонецФункции ");
   М.Добавить("Функция HTML() экспорт стр=""""; Для сч=1 По КоличествоОбъектов Цикл стр=стр+""<div class=""""ball""+ИмяОб+""""""></div>""  КонецЦикла; "+ 
      "UfaScript.Запись.ЗаписатьСтроку(""<div class=""""contener""+ИмяОб+"""""">""+стр+""</div>"");  КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLШарики01(НомОб)
//Описание: Создать объект HTMLШарики01  
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLШарики01(ИмяОб) экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLШарики01(Новый Массив));  об.ИмяОб=ИмяОб; Возврат Об;
КонецФункции

Функция Запись_HTMLШарики02() экспорт 
  Запись.ЗаписатьСтроку("<div class=""wrapper"">"+
  
    "<div class=""line line1""><span class=""circle circle-top""></span><div class=""dotted"">"+
	"<span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span>"+
	"<span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line2"">"+
	"<span class=""circle circle-top""></span><div class=""dotted""><span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span>"+
	"<span class=""dot dot-middle-bottom""></span><span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line3""><span class=""circle circle-top""></span><div class=""dotted""><span class=""dot dot-top""></span>"+
	"<span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span><span class=""dot dot-bottom""></span>"+
	"</div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line4""><span class=""circle circle-top""></span>"+
	"<div class=""dotted""><span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span>"+
	"<span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line5"">"+
	"<span class=""circle circle-top""></span><div class=""dotted""><span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span>"+
	"<span class=""dot dot-middle-bottom""></span><span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line6""><span class=""circle circle-top""></span><div class=""dotted""><span class=""dot dot-top""></span>"+
	"<span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span><span class=""dot dot-bottom""></span></div>"+
	"<span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line7""><span class=""circle circle-top""></span><div class=""dotted"">"+
	"<span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span>"+
	"<span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line8""><span class=""circle circle-top"">"+
	"</span><div class=""dotted""><span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span>"+
	"<span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line9""><span class=""circle circle-top"">"+
	"</span><div class=""dotted""><span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span>"+
	"<span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line10""><span class=""circle circle-top"">"+
	"</span><div class=""dotted""><span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span>"+
	"<span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"<div class=""line line11""><span class=""circle circle-top"">"+
	"</span><div class=""dotted""><span class=""dot dot-top""></span><span class=""dot dot-middle-top""></span><span class=""dot dot-middle-bottom""></span>"+
	"<span class=""dot dot-bottom""></span></div><span class=""circle circle-bottom""></span></div>"+
	
	"</div>");
КонецФункции

Функция Запись_CSSШарики02() экспорт 
   Запись.ЗаписатьСтроку(".wrapper{	position: absolute;	float: left; margin: 140px 100px; }	.line{ position: absolute; top: 0px; width: 2px; height: 8px; "+
	"background-color: red;	} .circle{ position: absolute; display: block; width: 8px;	height: 8px; border-radius: 50%; background-color: blue; "+
	"} .circle-top{	top: 0px; left: -3.5px;	} .circle-bottom{ bottom: 0px; left: -3.5px; } .dot{ position: absolute; display: block; width: 4px; "+
	"height: 4px; border-radius: 50%; left: -1.5px;	} "+

	".line1{ margin-left: 0px;	background-color: #2410CB;	-webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) infinite;	animation: line 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) infinite; }	.line1 > span{ background-color: #D4141E; }	.line1 > .dotted > .dot{ background-color: #D4141E;	} "+
	".line1 > .dotted > .dot-top{ top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) infinite; animation: dot-top 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) infinite; }	.line1 > .dotted > .dot-bottom{ bottom: 0px; -webkit-animation: dot-bottom 2s cubic-bezier(0.250, "+
	"0, 0.705, 1) infinite; animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) infinite; } .line1 > .dotted > .dot-middle-top{ top: 0px; "+
	"-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) infinite; animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	"infinite; } .line1 > .dotted > .dot-middle-bottom{ bottom: 0px; -webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) infinite;	"+
	"animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) infinite;	} "+

	".line2{ margin-left: 35px; background-color: #852DF4;	-webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .05s infinite; animation: line 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .05s infinite; } .line2 > span{ background-color: #FC7E48; } .line2 > .dotted > .dot{ background-color: #FC7E48; } "+
	".line2 > .dotted > .dot-top{ top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .05s infinite; animation: dot-top 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .05s infinite; } .line2 > .dotted > .dot-bottom{ bottom: 0px;	-webkit-animation: dot-bottom 2s cubic-bezier(0.250, 0, "+
	"0.705, 1) .05s infinite; animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .05s infinite; } .line2 > .dotted > .dot-middle-top{ top: 0px; "+
	"-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .05s infinite;	animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".05s infinite; } .line2 > .dotted > .dot-middle-bottom{ bottom: 0px; -webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .05s "+
	"infinite; animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .05s infinite; } "+
	
	".line3{ margin-left: 70px; background-color: #F42DF1; -webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .1s infinite; animation: line 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .1s infinite; } .line3 > span{ background-color: #EDEB29; } .line3 > .dotted > .dot{ background-color: #EDEB29; } "+
	".line3 > .dotted > .dot-top{	top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .1s infinite;	animation: dot-top 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .1s infinite; } .line3 > .dotted > .dot-bottom{ bottom: 0px;	-webkit-animation: dot-bottom 2s cubic-bezier(0.250, "+
	"0, 0.705, 1) .1s infinite; animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .1s infinite; } .line3 > .dotted > .dot-middle-top{ top: 0px;	"+
	"-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .1s infinite; animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".1s infinite;	} .line3 > .dotted > .dot-middle-bottom{ bottom: 0px; -webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".1s infinite;	animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .1s infinite;	} "+
	
	".line4{ margin-left: 105px; background-color: #F91396;	-webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .15s infinite; animation: line 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .15s infinite; } .line4 > span{ background-color: #ACED29; } .line4 > .dotted > .dot{ background-color: #ACED29; } "+
	".line4 > .dotted > .dot-top{ top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .15s infinite;	animation: dot-top 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .15s infinite; } .line4 > .dotted > .dot-bottom{ bottom: 0px; -webkit-animation: dot-bottom 2s cubic-bezier(0.250, "+
	"0, 0.705, 1) .15s infinite;	animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .15s infinite; }	.line4 > .dotted > .dot-middle-top{	top: "+
	"0px; -webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .15s infinite; animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".15s infinite; } .line4 > .dotted > .dot-middle-bottom{ bottom: 0px; -webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .15s "+
	"infinite; animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .15s infinite; } "+
	
	".line5{ margin-left: 140px;	background-color: #D4141E; -webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .2s "+
	"infinite;	animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .2s infinite; }	.line5 > span{	background-color: #4EF02B;	} .line5 > .dotted > .dot{ "+
	"background-color: #4EF02B;	} .line5 > .dotted > .dot-top{ top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .2s infinite; "+
	"animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .2s infinite; }	.line5 > .dotted > .dot-bottom{	bottom: 0px; -webkit-animation: dot-bottom 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .2s infinite;	animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .2s infinite;	} .line5 > .dotted > .dot-middle-top{ "+
	"top: 0px;	-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .2s infinite;	animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".2s infinite;	} .line5 > .dotted > .dot-middle-bottom{ bottom: 0px; -webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .2s infinite; "+
	"animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .2s infinite;	} .line6{ margin-left: 175px; background-color: #FC7E48; -webkit-animation: "+
	"line 2s cubic-bezier(0.250, 0, 0.705, 1) .25s infinite; animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .25s infinite;	} .line6 > span{ "+
	"background-color: #38E790;	} .line6 > .dotted > .dot{ background-color: #38E790; }	.line6 > .dotted > .dot-top{ top: 0px;	-webkit-animation: dot-top 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .25s infinite; animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .25s infinite;	} .line6 > .dotted > .dot-bottom{ "+
	"bottom: 0px;	-webkit-animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .25s infinite; animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".25s infinite;	} .line6 > .dotted > .dot-middle-top{ top: 0px;	-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .25s infinite; "+
	"animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .25s infinite; }	.line6 > .dotted > .dot-middle-bottom{	bottom: 0px; "+
	"-webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .25s infinite; animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".25s infinite;	} .line7{ margin-left: 210px; background-color: #EDEB29; -webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite; "+
	"animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite;	} .line7 > span{ background-color: #25EACC;	} .line7 > .dotted > .dot{ "+
	"background-color: #25EACC;	} .line7 > .dotted > .dot-top{ top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite; "+
	"animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite; }	.line7 > .dotted > .dot-bottom{	bottom: 0px; -webkit-animation: dot-bottom 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .3s infinite;	animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite;	} .line7 > .dotted > .dot-middle-top{ "+
	"top: 0px;	-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite;	animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".3s infinite; } .line7 > .dotted > .dot-middle-bottom{	bottom: 0px; -webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite; "+
	"animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .3s infinite;	} .line8{ margin-left: 245px; background-color: #ACED29; "+
	"-webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .35s infinite;	animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .35s infinite;	} "+
	".line8 > span{	background-color: #309CDF;	} .line8 > .dotted > .dot{	background-color: #309CDF;	} .line8 > .dotted > .dot-top{	top: 0px; "+
	"-webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .35s infinite;	animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .35s infinite; "+
	"}	.line8 > .dotted > .dot-bottom{	bottom: 0px; -webkit-animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .35s infinite; animation: dot-bottom 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .35s infinite; }	.line8 > .dotted > .dot-middle-top{	top: 0px; -webkit-animation: dot-middle-top 2s cubic-bezier(0.250, "+
	"0, 0.705, 1) .35s infinite; animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .35s infinite; }	.line8 > .dotted > .dot-middle-bottom{ "+
	"bottom: 0px;	-webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .35s infinite;	animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, "+
	"0.705, 1) .35s infinite; }	.line9{	margin-left: 280px;	background-color: #4EF02B;	-webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite; "+
	"animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite;	} .line9 > span{ background-color: #2544E7;	} .line9 > .dotted > .dot{ "+
	"background-color: #2544E7;	} .line9 > .dotted > .dot-top{	top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite; "+
	"animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite; }	.line9 > .dotted > .dot-bottom{	bottom: 0px; -webkit-animation: dot-bottom 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .4s infinite;	animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite;	} .line9 > .dotted > .dot-middle-top{ "+
	"top: 0px;	-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite;	animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) "+
	".4s infinite;	} .line9 > .dotted > .dot-middle-bottom{ bottom: 0px; -webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite; "+
	"animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .4s infinite;	} .line10{	margin-left: 315px;	background-color: #38E790;	-webkit-animation: "+
	"line 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite; animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite;	} .line10 > span{ "+
	"background-color: #852DF4;	} .line10 > .dotted > .dot{	background-color: #852DF4;	} .line10 > .dotted > .dot-top{	top: 0px;	-webkit-animation: dot-top 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .45s infinite; animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite;	} .line10 > .dotted > .dot-bottom{ "+
	"bottom: 0px; -webkit-animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite;	animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .45s "+
	"infinite;	} .line10 > .dotted > .dot-middle-top{	top: 0px;	-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite; "+
	"animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite; }	.line10 > .dotted > .dot-middle-bottom{	bottom: 0px; -webkit-animation: "+
	"dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite;	animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .45s infinite; } "+
    ".line11{ margin-left: 350px; background-color: #25EACC; -webkit-animation: line 2s cubic-bezier(0.250, 0, 0.705, 1) .5s infinite;	animation: line 2s "+
    "cubic-bezier(0.250, 0, 0.705, 1) .5s infinite;	} .line11 > span{ background-color: #F42DF1; } .line11 > .dotted > .dot{ background-color: #F42DF1; } "+
	".line11 > .dotted > .dot-top{ top: 0px; -webkit-animation: dot-top 2s cubic-bezier(0.250, 0, 0.705, 1) .5s infinite; animation: dot-top 2s "+
	"cubic-bezier(0.250, 0, 0.705, 1) .5s infinite;	} .line11 > .dotted > .dot-bottom{	bottom: 0px; -webkit-animation: dot-bottom 2s cubic-bezier(0.250, 0, "+
	"0.705, 1) .5s infinite; animation: dot-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .5s infinite; } .line11 > .dotted > .dot-middle-top{	top: 0px; "+
	"-webkit-animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .5s infinite; animation: dot-middle-top 2s cubic-bezier(0.250, 0, 0.705, 1) .5s "+
	"infinite;	} .line11 > .dotted > .dot-middle-bottom{ bottom: 0px;	-webkit-animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .5s infinite; "+
	"animation: dot-middle-bottom 2s cubic-bezier(0.250, 0, 0.705, 1) .5s infinite;	} @-webkit-keyframes line{	0%{height: 4px; top: 0px; left: 0px; "+
	"-webkit-transform: rotate(-65deg)}	10%{height: 220px; top: -110px; left: 15px;} 45%{height: 200px; top: -100px; left: 25px;}	70%{height: 8px; top: 0px; "+
	"left: 25px; -webkit-transform: rotate(0deg);}	100%{height: 8px; top: 0px; left: 15px; -webkit-transform: rotate(0deg);} }	@-webkit-keyframes dot-top{ "+
	"0%{top: -30px}	10%{top: -30px;} 45%{top: -25px;} 60%{top: 0px;} 100%{top: 0px;} }	@-webkit-keyframes dot-bottom{	0%{bottom: -30px} 10%{bottom: -30px;} "+
	"45%{bottom: -25px;} 60%{bottom: 0px;}	100%{bottom: 0px;}	} @-webkit-keyframes dot-middle-top{ 0%{} 10%{}	45%{top: 98px;}	70%{top: -50px;} 85%{top: 0px;} "+
	"100%{top: 0px;} }	@-webkit-keyframes dot-middle-bottom{ 0%{} 10%{} 45%{bottom: 98px;}	70%{bottom: -50px;}	85%{bottom: 0px;} 100%{bottom: 0px;} } "+
	"@keyframes line{ 0%{height: 4px; top: 0px; left: 0px; transform: rotate(-65deg)}	10%{height: 220px; top: -110px; left: 15px;} 45%{height: 200px; top: "+
	"-100px; left: 25px;}	70%{height: 8px; top: 0px; left: 25px; transform: rotate(0deg);} 100%{height: 8px; top: 0px; left: 15px; transform: rotate(0deg);} }"+
	"@keyframes dot-top{ 0%{top: -30px}	10%{top: -30px;} 45%{top: -25px;} 60%{top: 0px;} 100%{top: 0px;} }	@keyframes dot-bottom{	0%{bottom: -30px} "+
	"10%{bottom: -30px;} 45%{bottom: -25px;} 60%{bottom: 0px;} 100%{bottom: 0px;} }	@keyframes dot-middle-top{ 0%{}	10%{} 45%{top: 78px;} 70%{top: -50px;} "+
	"85%{top: 0px;}	100%{top: 0px;}	} @keyframes dot-middle-bottom{	0%{} 10%{}	45%{bottom: 78px;}	70%{bottom: -50px;}	85%{bottom: 0px;} 100%{bottom: 0px;} }");
КонецФункции

//Имя: ОбразОбъектHTMLШарики02(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLШарики02 
//Категория: ООП HTML Объект МассивОбъект 
Функция ОбразОбъектHTMLШарики02(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Функция CSS() экспорт  UfaScript.Запись_CSSШарики02(); КонецФункции ");
   М.Добавить("Функция HTML() экспорт UfaScript.Запись_HTMLШарики02();  КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLШарики02()
//Описание: Создать объект HTMLШарики02  
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLШарики02() экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLШарики02(Новый Массив));
  Возврат Об;
КонецФункции

//---------------------  Движущиеся шарики (конец) ------------------------------------------------------------------

//---------------------  Программист ------------------------------------------------------------------
Функция Запись_HTMLПрограммист() экспорт 
  Запись.ЗаписатьСтроку("<div class=""error404page""><div class=""newcharacter404""><div class=""chair404""></div><div class=""leftshoe404""></div> "+
    "<div class=""rightshoe404""></div><div class=""legs404""></div><div class=""torso404""><div class=""body404""></div><div class=""leftarm404""></div> "+
    "<div class=""rightarm404""></div><div class=""head404""><div class=""eyes404""></div></div></div><div class=""laptop404""></div></div></div>");
КонецФункции

Функция Запись_CSSПрограммист() экспорт 
   Запись.ЗаписатьСтроку(".error404page { height: 800px; } .body404, .head404, .eyes404, .leftarm404, .rightarm404, .chair404, .leftshoe404, "+
     ".rightshoe404, .legs404, .laptop404 { background: url(https://s3-us-west-2.amazonaws.com/s.cdpn.io/15979/404-character-new.png) 0 0 no-repeat; "+
     "width: 200px;  height: 200px; } .newcharacter404, .torso404, .body404, .head404, .eyes404, .leftarm404, .rightarm404, .chair404, .leftshoe404, "+
     ".rightshoe404, .legs404, .laptop404 { background-size: 750px;  position: absolute;  display: block; } .newcharacter404 { width: 400px; "+
     "height: 800px;  left: 50%;  top: 20px;  margin-left: -200px; } $swayspeed: 20s; .torso404 { position: absolute; display: block; top: 138px; "+
     "left: 0px; width: 389px; height: 252px;  animation: sway $swayspeed ease infinite; transform-origin: 50% 100%; } .body404 { position: absolute; "+
     "display: block;  top: 0px;  left: 0px;  width: 389px;  height: 253px; } .head404 { position: absolute; top: -148px; left: 106px; width: 160px; "+
     "height: 194px; background-position: 0px -265px; transform-origin: 50% 85%; animation: headTilt $swayspeed ease infinite; } .eyes404 { "+
     "position: absolute; top: 92px; left: 34px;  width: 73px; height: 18px; background-position: -162px -350px; animation: blink404 10s steps(1) infinite, "+
     "pan 10s ease-in-out infinite; } .leftarm404 { position: absolute; top: 159px; left: 0; width: 165px; height: 73px; background-position: -265px -341px; "+
     "transform-origin: 9% 35%;  transform: rotateZ(0deg); animation: typeLeft 0.4s linear infinite; } .rightarm404 { position: absolute; top: 148px; "+
     "left: 231px;  width: 157px;  height: 91px;  background-position: -442px -323px;  transform-origin: 90% 25%;  animation: typeLeft 0.4s linear infinite; } "+
     ".chair404 { position: absolute; top: 430px; left: 55px; width: 260px; height: 365px; background-position: -12px -697px; } .legs404 { position: absolute; "+
     "top: 378px;  left: 4px;  width: 370px;  height: 247px;  background-position: -381px -443px; } .leftshoe404 { position: absolute; top: 591px; left: 54px; "+
     "width: 130px;  height: 92px;  background-position: -315px -749px; } .rightshoe404 { position: absolute;  top: 594px;  left: 187px;  width: 135px; "+
     "height: 81px;  background-position: -453px -749px; transform-origin: 35% 12%; animation: tapRight 1s linear infinite; } .laptop404 { position: absolute; "+
     "top: 186px;  left: 9px;  width: 365px;  height: 216px;  background-position: -2px -466px;  transform-origin: 50% 100%;  animation: tapWobble 0.4s linear "+
     "infinite; } @keyframes sway { 0%   { transform: rotateZ(0deg); } 20%  { transform: rotateZ(0deg); } 25%  { transform: rotateZ(4deg); } 45%  { transform: "+
     "rotateZ(4deg); }  50% { transform: rotateZ(0deg); }  70%  { transform: rotateZ(0deg); }  75%  { transform: rotateZ(-4deg); } 90%  { transform: "+
     "rotateZ(-4deg); }  100% { transform: rotateZ(0deg); } } @keyframes headTilt {  0%   { transform: rotateZ(0deg); }  20%  { transform: rotateZ(0deg); } "+
     "25%  { transform: rotateZ(-4deg); }  35%  { transform: rotateZ(-4deg); }  38%  { transform: rotateZ(2deg); }  42%  { transform: rotateZ(2deg); } "+
     "45%  { transform: rotateZ(-4deg); }  50%  { transform: rotateZ(0deg); }  70%  { transform: rotateZ(0deg); }  82%  { transform: rotateZ(0deg); } "+
     "85%  { transform: rotateZ(4deg); }  90%  { transform: rotateZ(4deg); }  100% { transform: rotateZ(0deg); } }  @keyframes typeLeft { "+
     "0%   { transform: rotateZ(0deg); }  25%  { transform: rotateZ(7deg); }  75%  { transform: rotateZ(-6deg); }  100% { transform: rotateZ(0deg); } "+
     "} @keyframes typeRight { 0%   { transform: rotateZ(0deg); }  25%  { transform: rotateZ(-6deg); }  75%  { transform: rotateZ(7deg); } "+
     "100% { transform: rotateZ(0deg); } } @keyframes tapWobble {  0%   { transform: rotateZ(-0.2deg); }  50%  { transform: rotateZ(0.2deg); } "+
     "100% { transform: rotateZ(-0.2deg); } } @keyframes tapRight { 0%   { transform: rotateZ(0deg); } 90%  { transform: rotateZ(-6deg); } "+
     "100% { transform: rotateZ(0deg); } }  @keyframes blink404 { 0%   { background-position: -162px -350px; } 94%  { background-position: -162px -350px; } "+
     "98%  { background-position: -162px -368px; } 100% { background-position: -162px -350px; } } @keyframes pan { 0%   { transform: translateX(-2px); } "+
     "49%   { transform: translateX(-2px); } 50%  { transform: translateX(2px); }  99%  { transform: translateX(2px); } 100% { transform: translateX(-2px); } } ");
КонецФункции


//Имя: ОбразОбъектHTMLПрограммист(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLПрограммист 
//Категория: ООП HTML Объект МассивОбъект 
Функция ОбразОбъектHTMLПрограммист(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Функция CSS() экспорт  UfaScript.Запись_CSSПрограммист(); КонецФункции ");
   М.Добавить("Функция HTML() экспорт UfaScript.Запись_HTMLПрограммист();  КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLПрограммист()
//Описание: Создать объект HTMLПрограммист 
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLПрограммист() экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLПрограммист(Новый Массив));
  Возврат Об;
КонецФункции
//---------------------  Программист (конец) ------------------------------------------------------------------

//---------------------  Вывод Текста ------------------------------------------------------------------
//Имя: ИнициализацияТегов()
//Описание: body, div, h1, h2, h3, h4, h5, h6, p, ul, ol, li, dl, dt, dd, img, form, fieldset, blockquote { margin: 0; padding: 0; border: 0; }
//Категория: CSS  
Функция ИнициализацияCSSТегов() экспорт     
  Запись.ЗаписатьСтроку("body, div, h1, h2, h3, h4, h5, h6, p, ul, ol, li, dl, dt, dd, img, form, fieldset, blockquote { margin: 0; padding: 0; border: 0; }");
КонецФункции

//Имя: ОбразОбъектHTMLТекст(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLТекст 
//Категория: ООП HTML Объект МассивОбъект 
Функция ОбразОбъектHTMLТекст(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Перем Префикс экспорт; Перем РазмерТекста экспорт; Перем ЦветТекста экспорт; Перем ГлубинаТени экспорт; Перем ЦветТени экспорт; "+
        "Перем ОтступСверху экспорт; Перем ОтступСнизу экспорт; Перем ОтступСлева экспорт; Перем ОтступСправа экспорт; Перем ВерхнийРегистр экспорт; "+
        "Перем Выравнивание экспорт;  ");
   М.Добавить("Функция Конструктор() экспорт Префикс=""""; РазмерТекста=30; ЦветТекста=""#717171""; ГлубинаТени=7; ЦветТени=""#333""; "+
        "ОтступСверху=10; ОтступСнизу=0; ОтступСлева=0; ОтступСправа=0; ВерхнийРегистр=Ложь;  Выравнивание=3;  КонецФункции ");
   М.Добавить("Функция УстановитьВерхнийРегистр() Строка=""""; Если ВерхнийРегистр Тогда Строка="" text-transform: uppercase; ""; КонецЕсли; "+
        "Возврат Строка; КонецФункции ");
   М.Добавить("Функция УстановитьВыравнивание() Строка=""""; Если Выравнивание=1 Тогда Строка="" text-align: left; ""; "+
        "ИначеЕсли Выравнивание=2 Тогда Строка="" text-align: right; ""; ИначеЕсли Выравнивание=3 Тогда Строка="" text-align: center; "";  "+
        "КонецЕсли; Возврат Строка; КонецФункции ");
   М.Добавить("Функция CSS() экспорт  UfaScript.Запись.ЗаписатьСтроку(""div { margin: 0; padding: 0; border: 0; } .tekst""+Префикс+"" { "+
        "font-size: ""+РазмерТекста+""px; color: ""+ЦветТекста+""; text-shadow: 0 ""+ГлубинаТени+""px ""+ГлубинаТени+""px ""+ЦветТени+""; "+
        "margin: ""+ОтступСверху+""px  ""+ОтступСправа+"" ""+ОтступСнизу+"" ""+ОтступСлева+""; ""+УстановитьВерхнийРегистр()+"" "+
        " ""+УстановитьВыравнивание()+"" }""); КонецФункции ");
   М.Добавить("Функция HTML(Текст) экспорт UfaScript.Запись.ЗаписатьСтроку(""<div class=""""tekst""+Префикс+"""""">""+Текст+""</div>"");  КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLТекст(Знач Префикс="")
//Описание: Создать объект HTMLТекст 
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLТекст(Знач Префикс="") экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLТекст(Новый Массив)); Об.Префикс=Префикс; Возврат Об;
КонецФункции

//Имя: ОбразОбъектHTMLКонсоль(М)
//Описание: Создать массивОбъект для создания объекта ОбъектHTMLКонсоль 
//Категория: ООП HTML Объект МассивОбъект Текст
Функция ОбразОбъектHTMLКонсоль(М)      
   М=ОбразОбъектHTMLБазовый(М);   
   М.Добавить("Перем Префикс экспорт; Перем ШиринаБордюра экспорт; Перем ЦветБордюра экспорт; Перем Ширина экспорт; "+
      " Перем Высота экспорт; Перем ОтступТекста экспорт; Перем ЦветФона экспорт; ");
   М.Добавить("Функция Конструктор() экспорт Префикс=""""; ШиринаБордюра=1; ЦветБордюра=""grey""; Ширина=250; Высота=110; "+
      "ОтступТекста=10; ЦветФона=""lightgray"";  КонецФункции ");
   М.Добавить("Функция CSS() экспорт  UfaScript.Запись.ЗаписатьСтроку("" #console""+Префикс+"" { border: ""+ШиринаБордюра+""px solid ""+ЦветБордюра+""; "+
        "width:""+Ширина+""px; height: ""+Высота+""px; padding: ""+ОтступТекста+""px; background:""+ЦветФона+""; } ""); КонецФункции ");
   М.Добавить("Функция HTML() экспорт UfaScript.Запись.ЗаписатьСтроку(""<div id=""""console""+Префикс+""""""></div>"");  КонецФункции ");   
   Возврат М;
КонецФункции

//Имя: СоздатьОбъектHTMLКонсоль(Знач Префикс="")
//Описание: Создать объект HTMLТекст 
//Категория: ООП HTML Объект 
Функция СоздатьОбъектHTMLКонсоль(Знач Префикс="") экспорт      
  Об=СоздатьООПОбъектИзМассива("",ОбразОбъектHTMLКонсоль(Новый Массив)); Об.Префикс=Префикс; Об.ИмяОбъекта="console"+Префикс; Возврат Об;
КонецФункции

//---------------------  Вывод Текста (конец) ------------------------------------------------------------------

//Имя: Запись_CSSДляВерхнихКартинок()
//Описание: Установить CSS для трех верхних картинок
//Категория: Joomla CSS 
Функция Запись_CSSДляВерхнихКартинок() экспорт
  Запись.ЗаписатьСтроку(" .top-left{ text-align:left; padding:1px; border: 4px solid #91725e;  Width:90%; } "+
    ".top-center{ text-align:center; padding:1px; border: 4px solid #91725e; Width:90%; } "+
    ".top-right{ text-align:right; padding:1px; border: 4px solid #91725e;  Width:90%; } .img{ Width:99% } ");
КонецФункции

Функция Запись_ТриВерхниеКартинки(imgLeft,imgCenter,imgRight) экспорт
   Запись.ЗаписатьСтроку("<table><tr><td><div class=""top-left""><a href=""<?php $JUri; ?>""><img class=""logotip img"" src=""<?php echo $JUri.""/templates/""."+
      "$doc->template; ?>/images/"+imgLeft+""" alt=""<?php echo $LOGOTIP; ?>"" /></a><jdoc:include type=""modules"" name=""position-6"" /></div></td><td>"+
      " <div class=""top-center""><a href=""<?php $JUri; ?>""><img class=""center img"" src=""<?php echo $JUri.""/templates/"".$doc->template; "+
      "?>/images/"+imgCenter+""" alt=""<?php echo ""TopCenter.jpg""; ?>"" /></a></div></td>  <td><div class=""top-right""><a href=""<?php $JUri; ?>"">"+
      "<img class=""right img"" src=""<?php echo $JUri.""/templates/"".$doc->template; ?>/images/"+imgRight+""" alt=""<?php echo ""TopRight.jpg""; ?>"" />"+
     "</a></div></td></tr></table>");
КонецФункции

Функция Строка_HTMLСсылкаНаJSФункцию(Функц,Текст) экспорт
   Возврат " <a href=""#"" onclick="""+Функц+";"">"+Текст+"</a> ";
КонецФункции

//---------------------  Функции PHP ------------------------------------------------------------------
Функция PHPСтрока_СегодняДата() экспорт
  Возврат " echo date(""d-m-y G:i""); ";
КонецФункции

Функция PHPСтрока_СформироватьArrИзСтроки(Стр) экспорт
   Возврат " $Str="""+Стр+"""; $arr=explode(',',$Str); ";
КонецФункции

Функция PHPСтрока_СоединениеMySQL(Имя,Пользователь,Пароль,ИмяБазы) экспорт
  Возврат " $link=mysql_connect("""+Имя+""","""+Пользователь+""","""+Пароль+""") or die(""Не могу соединиться: "".mysql_error()); mysql_select_db("""+ИмяБазы+""") "+
     "or die(""Не работает: "".mysql_error()); ";
КонецФункции

Функция PHPСтрока_SQLЗапрос(Текст) экспорт
   Возврат " $sql="""+Текст+"""; $result = mysql_query($sql) or die(mysql_error()); ";
КонецФункции

Функция PHPСтрока_ИнфоPHP() экспорт
   Возврат " echo phpinfo(); ";
КонецФункции

Функция PHPСтрока_ПараметрыВФайлПараметр(Парам) экспорт
   Возврат "function ParametryVFailParametr() { $fd=fopen(""Parametr.txt"",""w"") or die(""не удалось создать файл""); $str=""Параметр""; "+
      "fwrite($fd,$str); fclose($fd); } "; 
КонецФункции


// Создать таблицу              CREATE TABLE test (id INT AUTO_INCREMENT PRIMARY KEY, maintext TEXT, title VARCHAR(100))
// Создание новой записи        INSERT INTO test SET maintext='$mt', title='заголовок'
// Изменение записи             UPDATE test SET title='заголовок' where id='3'
// LIMIT 1 - получим только 1 запись, LIMIT 5,10 - 10 записей, начиная с 5-ой 
// Обработка SQL-выборки в PHP  while($r=mysql_fetch_assoc($result)) { echo "Текст: ".$r['maintext']; echo "<br>под номером: ".$r['id']; }
// При отладке используйте функцию var_dump($a);  можно var_dump($POST);
 
//---------------------  Функции PHP (конец) ------------------------------------------------------------------

//---------------------  Функции Ajax ------------------------------------------------------------------
Функция СтрокаAjaxJS_СоздатьRequest() экспорт
  Возврат " var request1; if (window.XMLHttpRequest) { request1 = new XMLHttpRequest(); } else "+
      "if (window.ActiveXObject) {  request1 = new ActiveXObject(""Microsoft.XMLHTTP""); } else { return; } ";
КонецФункции

Функция СтрокаAjaxJS_ОтветОтСервера(State1,State2,State3,State4,Error404) экспорт
  Возврат " request1.onreadystatechange = function() { switch (request1.readyState) { case 1: "+State1+" break; case 2: "+State2+" break; "+
     "case 3: "+State3+" break; case 4: {if (request1.status==200) { "+State4+"; } else if (request1.status==404) { "+Error404+"; } "+
     " else alert(""Ошибка: сервер вернул статус: ""+ request1.status); break;  }}};";
КонецФункции

Функция СтрокаAjaxJS_POSTЗапрос(url,Данные) экспорт
   Возврат " request1.open(""POST"",""Content.php"",true);  "+
     "request1.setRequestHeader(""Content-type"",""application/x-www-form-urlencoded""); request1.send(""param1=1&param2=2"");";
   
   
    //request.open(""POST"",""+url+"",true); request.setRequestHeader(""Content-type"",""application/x-www-form-urlencoded""); "+
    //  " request.send(""+Данные+"");";    (""POST"",url,true)  request1.send(""param1=1&param2=2"");
КонецФункции

Функция СтрокаAjaxJS_GETЗапрос(url) экспорт
   Возврат " request1.open(""GET"",""Content.php?a1=1&a2=2"",true); "+
     "request1.setRequestHeader(""Content-type"",""application/x-www-form-urlencoded""); request1.send("" "");";
КонецФункции

Функция СтрокаAjaxJS_ФункцияВыводаВКонсоль(ИмяФунк,Div1) экспорт
  Возврат "<script type=""text/javascript""> function "+ИмяФунк+"(text){ document.getElementById("""+Div1+""").innerHTML += text; } </script>";
КонецФункции

Функция AjaxJS_ИнициализироватьAjaxGET(ОбработкаОтвета,Знач МассивИнфо=0) экспорт
  Если МассивИнфо=0 Тогда    Error404="";  State1="";  State2="";  State3=""; НетОбработки="";  
  ИначеЕсли МассивИнфо.Количество()>0 Тогда Error404=МассивИнфо[0]; 
     Если МассивИнфо.Количество()>1 Тогда  State1=МассивИнфо[1]; КонецЕсли;
     Если МассивИнфо.Количество()>2 Тогда  State2=МассивИнфо[2]; КонецЕсли;
     Если МассивИнфо.Количество()>3 Тогда  State3=МассивИнфо[3]; КонецЕсли;
     Если МассивИнфо.Количество()>4 Тогда  НетОбработки=МассивИнфо[4]; КонецЕсли;
  КонецЕсли;
  Строка = "<script type=""text/javascript""> function AjaxGET(Zapros){ "+СтрокаAjaxJS_СоздатьRequest()+
    СтрокаAjaxJS_ОтветОтСервера(State1,State2,State3,ОбработкаОтвета,Error404)+СтрокаAjaxJS_GETЗапрос("""Zapros""")+" } </script>";
  Запись.ЗаписатьСтроку(Строка);
КонецФункции



Функция AjaxPHP_СоздатьAjax() экспорт
  Если НЕ ФайлСуществует("xajax_core/xajax.inc.php") Тогда
     Сообщить("Вы не установили библиотеку xajax.inc.php для Ajax."); Возврат Ложь;
  КонецЕсли;
  Строка = "<?php require_once(""xajax_core/xajax.inc.php""); $xajax=new xajax(); ?>";
  Запись.ЗаписатьСтроку(Строка);  Возврат Истина;
КонецФункции

Функция AjaxPHP_РегистрироватьФункцию(Имя,Код) экспорт
  Строка = "<?php $xajax->register(XAJAX_FUNCTION,"""+Имя+"""); function "+Имя+"() "+
    "{ $objResponse=new xajaxResponse(); "+Код+" return $objResponse; } ?> ";
  Запись.ЗаписатьСтроку(Строка);  Возврат Истина;
КонецФункции

Функция СтрокаAjaxPHP_РазрешитьОбработкуАсинхронныхЗапросов() экспорт
  Строка = "<?php $xajax->processRequest(); ?>";  Возврат Строка;
КонецФункции

// установить новое содержимое элемента с id=div1
Функция СтрокаAjaxPHP_УстановитьСодержимое(div1,Свойство,Значение) экспорт
  Строка=" $objResponse->assign("""+div1+""","""+Свойство+""","""+Значение+"""); "; Возврат Строка;
КонецФункции

// Добавить новое содержимое элемента id=div1 в конец
Функция СтрокаAjaxPHP_ДобавитьСодержимоеВКонец(div1,Значение) экспорт
  Строка=" $objResponse->append("""+div1+""",""innerHtml"","""+Значение+"""); "; Возврат Строка;
КонецФункции

// Добавить новое содержимое элемента id=div1 в начало
Функция СтрокаAjaxPHP_ДобавитьСодержимоеВНачало(div1,Значение) экспорт
  Строка=" $objResponse->prepend("""+div1+""",""innerHtml"","""+Значение+"""); "; Возврат Строка;
КонецФункции

// Заменяет подстроку в содержимом элемента id=div1 
Функция СтрокаAjaxPHP_ЗаменитьПодСтроку(div1,Строка,Замена) экспорт
  Строка=" $objResponse->replace("""+div1+""",""innerHtml"","""+Строка+""","""+Замена+"""); "; Возврат Строка;
КонецФункции

// Уничтожает элемент id=div1 
Функция СтрокаAjaxPHP_УдалитьЭлемент(div1,Строка,Замена) экспорт
  Строка=" $objResponse->remove("""+div1+"""); "; Возврат Строка;
КонецФункции

// Создает новый элемент внутри элемента id=div1 
Функция СтрокаAjaxPHP_СоздатьЭлемент(div1,НовыйТег,НовыйId) экспорт
  Строка=" $objResponse->create("""+div1+""","""+НовыйТег+""","""+НовыйId+"""); "; Возврат Строка;
КонецФункции

// Создает новый элемент перед элементом id=div1 
Функция СтрокаAjaxPHP_СоздатьДоЭлемента(div1,НовыйТег,НовыйId) экспорт
  Строка=" $objResponse->insert("""+div1+""","""+НовыйТег+""","""+НовыйId+"""); "; Возврат Строка;
КонецФункции

// Создает новый элемент после элемента id=div1 
Функция СтрокаAjaxPHP_СоздатьПослеЭлемента(div1,НовыйТег,НовыйId) экспорт
  Строка=" $objResponse->insertAfter("""+div1+""","""+НовыйТег+""","""+НовыйId+"""); "; Возврат Строка;
КонецФункции

// Очистить содержимое элемента id=div1 
Функция СтрокаAjaxPHP_ОчиститьЭлемент(div1,Свойство) экспорт
  Строка=" $objResponse->clear("""+div1+""","""+Свойство+"""); "; Возврат Строка;
КонецФункции


//---------------------  Функции Ajax (конец) ------------------------------------------------------------------
